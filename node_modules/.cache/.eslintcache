[{"D:\\js\\React_Sotialna_Set\\src\\index.tsx":"1","D:\\js\\React_Sotialna_Set\\src\\redux\\redux-store.ts":"2","D:\\js\\React_Sotialna_Set\\src\\App.tsx":"3","D:\\js\\React_Sotialna_Set\\src\\redux\\dialogs-reducer.tsx":"4","D:\\js\\React_Sotialna_Set\\src\\redux\\profile-reducer.tsx":"5","D:\\js\\React_Sotialna_Set\\src\\redux\\auth-reducer.tsx":"6","D:\\js\\React_Sotialna_Set\\src\\redux\\users-reducer.tsx":"7","D:\\js\\React_Sotialna_Set\\src\\components\\Navbar\\Navbar.tsx":"8","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Dialogs.tsx":"9","D:\\js\\React_Sotialna_Set\\src\\components\\Users\\UsersContainer.tsx":"10","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileContainer.tsx":"11","D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\HederContainer.tsx":"12","D:\\js\\React_Sotialna_Set\\src\\components\\Users\\Users.tsx":"13","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\Profile.tsx":"14","D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\Heder.tsx":"15","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"16","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\MessageContainer.tsx":"17","D:\\js\\React_Sotialna_Set\\src\\components\\common\\Preloader\\Preloader.tsx":"18","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"19","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"20","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\Message.tsx":"21","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"22","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"23","D:\\js\\React_Sotialna_Set\\src\\api\\api.ts":"24","D:\\js\\React_Sotialna_Set\\src\\components\\Login\\Login.tsx":"25","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialigsContainer.tsx":"26","D:\\js\\React_Sotialna_Set\\src\\hoc\\withAuthRedirect.tsx":"27","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"28"},{"size":879,"mtime":1648381726000,"results":"29","hashOfConfig":"30"},{"size":745,"mtime":1651406768245,"results":"31","hashOfConfig":"30"},{"size":1735,"mtime":1649967361196,"results":"32","hashOfConfig":"30"},{"size":1371,"mtime":1653422198687,"results":"33","hashOfConfig":"30"},{"size":2475,"mtime":1653422806198,"results":"34","hashOfConfig":"30"},{"size":1347,"mtime":1649934983428,"results":"35","hashOfConfig":"30"},{"size":5176,"mtime":1649933858703,"results":"36","hashOfConfig":"30"},{"size":942,"mtime":1648381726000,"results":"37","hashOfConfig":"30"},{"size":735,"mtime":1651332018038,"results":"38","hashOfConfig":"30"},{"size":5824,"mtime":1651336234545,"results":"39","hashOfConfig":"30"},{"size":2575,"mtime":1651400885752,"results":"40","hashOfConfig":"30"},{"size":1429,"mtime":1649934983438,"results":"41","hashOfConfig":"30"},{"size":3516,"mtime":1649881461909,"results":"42","hashOfConfig":"30"},{"size":778,"mtime":1651397768231,"results":"43","hashOfConfig":"30"},{"size":553,"mtime":1649866825234,"results":"44","hashOfConfig":"30"},{"size":1306,"mtime":1648381726000,"results":"45","hashOfConfig":"30"},{"size":1784,"mtime":1653420930224,"results":"46","hashOfConfig":"30"},{"size":141,"mtime":1648381726000,"results":"47","hashOfConfig":"30"},{"size":2096,"mtime":1653422198662,"results":"48","hashOfConfig":"30"},{"size":731,"mtime":1651397768282,"results":"49","hashOfConfig":"30"},{"size":2178,"mtime":1653421069191,"results":"50","hashOfConfig":"30"},{"size":2755,"mtime":1653422595198,"results":"51","hashOfConfig":"30"},{"size":421,"mtime":1648381726000,"results":"52","hashOfConfig":"30"},{"size":1161,"mtime":1651399215103,"results":"53","hashOfConfig":"30"},{"size":1005,"mtime":1651410692803,"results":"54","hashOfConfig":"30"},{"size":781,"mtime":1651335996933,"results":"55","hashOfConfig":"30"},{"size":777,"mtime":1651335238599,"results":"56","hashOfConfig":"30"},{"size":935,"mtime":1651502379659,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"3qnupp",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"60"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\js\\React_Sotialna_Set\\src\\index.tsx",[],["130","131"],"D:\\js\\React_Sotialna_Set\\src\\redux\\redux-store.ts",[],"D:\\js\\React_Sotialna_Set\\src\\App.tsx",["132","133","134"],"import React from 'react';\nimport './App.module.css';\nimport {Header} from \"./components/Heder/Heder\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport s from \"./App.module.css\"\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport { Route} from \"react-router-dom\";\n\nimport { StoreType} from \"./redux/redux-store\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\nimport {ProfileConnect} from \"./components/Profile/ProfileContainer\";\nimport {HeaderContainer} from \"./components/Heder/HederContainer\";\nimport { Login } from './components/Login/Login';\nimport { DialigsContainer } from './components/Dialogs/DialigsContainer';\n\ntype appType = {\n    store: StoreType\n    //dispatch: (action: ActionType) => void\n}\n\nconst App: React.FC<appType> = (props) => {\n    return (\n\n            <div className={s.appWrapper}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={s.appWrapperContent}>\n                    {/*<Route path=\"/dialogs\" component={Dialogs}/>\n                <Route path=\"/profile\" component={Profile}/>*/}\n                    <Route path=\"/dialogs\" render={() => <DialigsContainer/>}/>\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileConnect/>}/>\n                    <Route path=\"/users\" render={() =><UsersContainer/>}/>\n                    <Route path=\"/login\" render={()=><Login/>}/>\n                    {/* <Route path=\"/news\" />\n                <Route path=\"/music\" />\n                <Route path=\"/settings\" />*/}\n                    {/*<Profile/>*/}\n                    {/*<Dialogs/>*/}\n\n                </div>\n            </div>\n    );\n}\n\n\nexport default App;\n","D:\\js\\React_Sotialna_Set\\src\\redux\\dialogs-reducer.tsx",["135","136","137"],"D:\\js\\React_Sotialna_Set\\src\\redux\\profile-reducer.tsx",["138","139"],"D:\\js\\React_Sotialna_Set\\src\\redux\\auth-reducer.tsx",["140"],"import React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { authAPI } from \"../api/api\";\n\n\nconst SET_USER_DATA = \"SET_USER_DATA\";\n\n\ntype setUserDateType = ReturnType<typeof setUserDate>\n\ntype actionType = setUserDateType;\n\nexport type InitialStateType = {\n    id: number\n    email: string\n    login: string\n    isAuth: boolean\n}\n\n\nlet initialState: InitialStateType = {\n    id: 0,\n    email: \"\",\n    login: \"\",\n    isAuth: false\n}\n\n\nexport const authReducer = (state = initialState, action: actionType): InitialStateType => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                login:action.data.login,\n                email:action.data.email,\n                id:action.data.id,\n                isAuth:true\n\n            }\n        default:\n            return state\n    }\n}\n\nexport const setUserDate = (email: string,id: number,  login: string) => ({\n    type: SET_USER_DATA,\n    data: { email,id, login} as const\n})\n\nexport const setUsersDataThunk =()=>(dispatch: Dispatch)=>{\n    authAPI.me().then(response => {\n        if (response.data.resultCode === 0) {\n            let email = response.data.data.email;\n            let id = response.data.data.id;\n            let login = response.data.data.login;\n            dispatch(setUserDate(email,id,  login))\n        }})\n}\n\n\n\n","D:\\js\\React_Sotialna_Set\\src\\redux\\users-reducer.tsx",["141","142"],"import React from \"react\";\nimport {Dispatch} from \"redux\";\nimport {usersAPI} from \"../api/api\";\n\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UN_FOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_IS_PROGRESS = \"TOGGLE_IS_FOLLOWING_IS_PROGRESS\";\n\n\ntype followACType = ReturnType<typeof followAC>;\ntype unFollowACType = ReturnType<typeof unFollowAC>;\ntype setUsersACType = ReturnType<typeof setUsersAC>;\ntype setCurrentPageACType = ReturnType<typeof setCurrentPageAC>;\ntype setTotalUsersCountACType = ReturnType<typeof setTotalUsersCountAC>;\ntype toggleFetchingACType = ReturnType<typeof toggleFetchingAC>\ntype toggleIsFollowingIsProgressType = ReturnType<typeof toggleIsFollowingIsProgress>\n\n\ntype actionType =\n    followACType\n    | unFollowACType\n    | setUsersACType\n    | setCurrentPageACType\n    | setTotalUsersCountACType\n    | toggleFetchingACType\n    | toggleIsFollowingIsProgressType;\n\nexport type userType = {\n    name: string\n    id: string,\n    uniqueUrlName: string,\n    photos: {\n        \"small\": string,\n        \"large\": string\n    },\n    status: string,\n    followed: boolean\n}\n\n\nexport type InitialStateType = {\n    users: Array<userType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: string[]\n}\n\nexport type usersType = typeof initialState\n\nlet initialState: InitialStateType = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 3,\n    isFetching: false,\n    followingInProgress: []\n}\n\n\nexport const usersReducer = (state: InitialStateType = initialState, action: actionType): InitialStateType => {\n\n\n    switch (action.type) {\n        case FOLLOW: {\n\n            return {\n                ...state, users: state.users.map(m => {\n\n\n                    if (m.id === action.userId) {\n\n\n                        return {...m, followed: true}\n                    }\n                    return m\n                })\n            }\n        }\n        case UNFOLLOW: {\n\n            return {\n                ...state, users: state.users.map(m => {\n\n\n                    if (m.id === action.userId) {\n\n                        return {...m, followed: false}\n                    }\n                    return m\n                })\n            }\n        }\n        case SET_USERS: {\n\n\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n\n\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n\n\n            return {...state, totalUsersCount: action.totalCount}\n        }\n        case TOGGLE_IS_FETCHING: {\n\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_IS_PROGRESS: {\n\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport const followAC = (userId: string) => (\n    {type: FOLLOW, userId} as const\n)\n\nexport const unFollowAC = (userId: string) => (\n    {type: UNFOLLOW, userId} as const\n)\n\nexport const setUsersAC = (users: Array<userType>) => (\n    {type: SET_USERS, users} as const\n)\n\nexport const setCurrentPageAC = (currentPage: number) => (\n    {type: SET_CURRENT_PAGE, currentPage} as const\n)\n\nexport const setTotalUsersCountAC = (totalCount: number) => (\n    {type: SET_TOTAL_USERS_COUNT, totalCount} as const\n)\nexport const toggleFetchingAC = (isFetching: boolean) => (\n    {type: TOGGLE_IS_FETCHING, isFetching} as const\n)\nexport const toggleIsFollowingIsProgress = (isFetching: boolean, userId: string) => (\n    {type: TOGGLE_IS_FOLLOWING_IS_PROGRESS, isFetching, userId} as const\n)\n\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\n\n    return (dispatch: Dispatch) => {\n        dispatch(toggleFetchingAC(true));\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\n            dispatch(toggleFetchingAC(false))\n            dispatch(setUsersAC(data.items))\n            dispatch(setTotalUsersCountAC(data.totalCount))\n        });\n    }\n}\n\n\nexport const followThunkCreator = (userId: string) => {\ndebugger\n    return (dispatch: Dispatch) => {\n        dispatch(toggleIsFollowingIsProgress(true,userId))\n        usersAPI.follow(userId).then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(followAC(userId))\n            }\n            dispatch(toggleIsFollowingIsProgress(false, userId))\n    })\n}\n\n}\n\nexport const unFollowThunkCreator = (userId: string) => {\n\n    return (dispatch: Dispatch) => {\n        dispatch(toggleIsFollowingIsProgress(true, userId))\n        usersAPI.unFollow(userId).then(response => {\n            if (response.data.resultCode === 0) {\n               dispatch(unFollowAC(userId))\n            }\n            dispatch(toggleIsFollowingIsProgress(false, userId))\n    })\n}}","D:\\js\\React_Sotialna_Set\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Dialogs.tsx",["143","144","145","146","147","148","149"],"import React, {ChangeEvent} from \"react\";\nimport s from \"./Dialogs.module.css\"\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\nimport {ActionType, stateType} from \"../../redux/store\";\nimport {AppStateType, StoreType} from \"../../redux/redux-store\";\nimport {SuperMessageContainer} from \"./Message/MessageContainer\";\nimport {mapStateToPropsType} from \"./DialigsContainer\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport const Dialogs = (props: mapStateToPropsType) => {\n\n    //if (!props.isAuth) return <Redirect to={\"/login\"}/>;\n\n    return (\n        <div className={s.dialogs}>\n            <DialogItem state={props.state}/>\n            <SuperMessageContainer/>\n        </div>\n    )\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Users\\UsersContainer.tsx",["150","151","152"],"import React from \"react\";\nimport {connect, MapDispatchToProps} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {compose, Dispatch} from \"redux\";\nimport {\n    followAC,\n    followThunkCreator,\n    getUsersThunkCreator,\n    setCurrentPageAC, setTotalUsersCountAC,\n    setUsersAC, toggleFetchingAC,\n    toggleIsFollowingIsProgress,\n    unFollowAC,\n    unFollowThunkCreator,\n    userType\n} from \"../../redux/users-reducer\";\nimport {Users} from \"./Users\";\nimport axios from \"axios\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\nimport {usersAPI} from \"../../api/api\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\n\nexport type mapStateToPropsType = {\n    users: AppStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: string[]\n}\nexport type mapDispatchToPropsType = {\n    follow: (userId: string) => void\n    unFollow: (userId: string) => void\n    setUsers: (users: Array<userType>) => void\n    setCurrentPage: (currentPage: number) => void\n    setTotalUsersCount: (totalCount: number) => void\n    toggleIsFetching: (isFetching: boolean) => void\n    toggleIsFollowingProgress: (isFetching: boolean, userId: string) => void\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\n    followThunkCreator: (userId: string) => void\n    unFollowThunkCreator:(userId: string)=>void\n}\n\n\nexport type UsersPropsType = mapStateToPropsType & mapDispatchToPropsType\n\nexport class UsersAPIComponent extends React.Component<UsersPropsType> {\n\n\n    componentDidMount() {\n        // this.props.toggleIsFetching(true);\n        /*        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`,\n                    {\n                        withCredentials:true\n                    }).then(response => {\n                    this.props.toggleIsFetching(false)\n                    this.props.setUsers(response.data.items)\n                    this.props.setTotalUsersCount(response.data.totalCount)/// должно быть в onPageChanged\n                });\n            }*/\n\n        /* usersAPI.getUsers(this.props.currentPage,this.props.pageSize).then(data => {\n             this.props.toggleIsFetching(false)\n             this.props.setUsers(data.items)\n             this.props.setTotalUsersCount(data.totalCount)/// должно быть в onPageChanged\n         });*/\n\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\n\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        this.props.setCurrentPage(pageNumber)//не должно быть сдесь нужно рефакторить\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\n        /*this.props.setCurrentPage(pageNumber);\n        this.props.toggleIsFetching(true);\n\n            usersAPI.getUsers(pageNumber,this.props.pageSize).then(data => {\n            this.props.toggleIsFetching(false);\n            this.props.setUsers(data.items)\n            this.props.setTotalUsersCount(data.totalCount)\n        });*/\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users\n                totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                onPageChanged={this.onPageChanged}\n                users={this.props.users}\n                currentPage={this.props.currentPage}\n                unFollow={this.props.unFollow}\n                follow={this.props.follow}\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\n                followingInProgress={this.props.followingInProgress}\n                followThunkCreator={this.props.followThunkCreator}\n                unFollowThunkCreator={this.props.unFollowThunkCreator}\n\n            />;\n        </>\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        users: state,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n    return {\n        follow: (userId: string) => {\n            dispatch(followAC(userId))\n        },\n        unFollow: (userId: string) => {\n            dispatch(unFollowAC(userId))\n        },\n        setUsers: (users: Array<userType>) => {\n            dispatch(setUsersAC(users))\n        },\n        setCurrentPage: (currentPage: number) => {\n            dispatch(setCurrentPageAC(currentPage))\n        },\n        setTotalUsersCount: (totalCount: number) => {\n            dispatch(setTotalUsersCountAC(totalCount))\n        },\n        toggleIsFetching: (isFetching: boolean) => {\n            dispatch(toggleFetchingAC(isFetching))\n        },\n        toggleIsFollowingProgress: (isFetching: boolean, userId: string) => {\n            dispatch(toggleIsFollowingIsProgress(isFetching, userId))\n        },\n        getUsersThunkCreator: (currentPage: number, pageSize: number) => {\n            getUsersThunkCreator(currentPage, pageSize)(dispatch)\n        },\n        followThunkCreator: ( userId: string) => {\n            followThunkCreator(userId)(dispatch)\n        },\n        unFollowThunkCreator:(userId: string)=>{\n            unFollowThunkCreator(userId)(dispatch)\n        }\n\n    }\n}\n\n\n//export const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(withAuthRedirect(UsersAPIComponent))\nexport const UsersContainer = compose<React.ComponentType>( connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(UsersAPIComponent)","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileContainer.tsx",["153","154","155","156"],"import React from \"react\";\n\nimport {Profile} from \"./Profile\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {\n    getUserProfileThunk,\n    getUsersSatatusThunk,\n    setUserProfileAC,\n    updateStatusThunk\n} from \"../../redux/profile-reducer\";\nimport {compose, Dispatch} from \"redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Redirect, RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {usersAPI} from \"../../api/api\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\ntype mapStateToPropsType = {\n    profile: any\n    status: string\n}\n\ntype mapDispatchToPropsType = {\n    getUserProfileThunk: (userId: string) => void\n    getUsersSatatusThunk: (userId: string) => void\n    updateStatusThunk: (status: string) => void\n}\n\ntype PathParamsType = {\n    userId: string\n}\n\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerType\n\n\ntype ProfileContainerType = mapStateToPropsType & mapDispatchToPropsType\n\nexport class ProfileContainer extends React.Component<PropsType> {\n    componentDidMount() {\n\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = \"2\";\n        }\n        this.props.getUserProfileThunk(userId)\n        this.props.getUsersSatatusThunk(userId)\n\n\n    }\n\n    render() {\n        //if (!this.props.isAuth )return <Redirect to={\"/login\"}/>;\n        return (\n\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatusThunk}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => (\n    {\n        profile: state.profileState.profile,\n        status: state.profileState.status\n\n\n    }\n);\n\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => (\n    {\n        getUserProfileThunk: (userId: string) => {\n            getUserProfileThunk(userId)(dispatch)\n        },\n        getUsersSatatusThunk: (userId: string) => {\n            getUsersSatatusThunk(userId)(dispatch)\n        },\n        updateStatusThunk: (status: string) => {\n            updateStatusThunk(status)(dispatch)\n        }\n    }\n)\n\n//let WithUrlDataContainerComponent = withRouter(ProfileContainer)\n//let WithUrlDataContainerComponent = withRouter(withAuthRedirect(ProfileContainer))\n\n//export const ProfileConnect = connect(mapStateToProps, mapDispatchToProps)(WithUrlDataContainerComponent);\nexport const ProfileConnect = compose<React.ComponentType>(withRouter, connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(ProfileContainer)\n\n\n","D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\HederContainer.tsx",["157","158","159"],"import axios from \"axios\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Header} from \"./Heder\";\nimport {setUserDate, setUsersDataThunk} from \"../../redux/auth-reducer\";\nimport { AppStateType } from \"../../redux/redux-store\";\nimport { authAPI } from \"../../api/api\";\n\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n    login: string\n}\nexport type mapDispatchToPropsType = {\n    setUsersDataThunk:()=>void\n}\nexport type headerPropsType = mapStateToPropsType & mapDispatchToPropsType\n\nexport class HeaderContainer1 extends React.Component<headerPropsType> {\n    componentDidMount() {\n     /*   axios.get(\"https://social-network.samuraijs.com/api/1.0/auth/me\", {\n            withCredentials: true\n        })\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    let email = response.data.data.email;\n                    let id = response.data.data.id;\n                    let login = response.data.data.login;\n                    this.props.setUserDate(email,id,  login)\n                }\n            })*/\n\n        this.props.setUsersDataThunk()\n    }\n\n    render() {\n        return <Header {...this.props}/>\n\n    }\n}\n\nconst MapStateToProps = (state: AppStateType):mapStateToPropsType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n\n\n})\n\n\nexport const HeaderContainer = connect(MapStateToProps, {setUsersDataThunk})(HeaderContainer1)","D:\\js\\React_Sotialna_Set\\src\\components\\Users\\Users.tsx",["160","161","162"],"import React from \"react\";\nimport s from \"./users.module.css\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {NavLink} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {usersAPI} from \"../../api/api\";\n\ntype UsersPropsType = {\n    totalUsersCount: number\n    pageSize: number\n    onPageChanged: (pageNumber: number) => void\n    users: AppStateType\n    currentPage: number\n    unFollow: (id: string) => void\n    follow: (id: string) => void\n    toggleIsFollowingProgress: (isFetching: boolean, userId: string) => void\n    followingInProgress: string[]\n    followThunkCreator: (userId: string) => void\n    unFollowThunkCreator:(userId: string) => void\n}\n\n\nexport let Users: React.FC<UsersPropsType> = (props) => {\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    return <div>\n        {pages.map(p => {\n            return <span className={props.currentPage === p ? s.selectedPage : \"\"} onClick={() => {\n                props.onPageChanged(p)\n            }}>{p} </span>\n        })}\n        {props.users.usersPage.users.map(m => <div key={m.id}>\n                <span>\n                    <div>\n                        <NavLink to={\"/profile/\" + m.id}>\n                        <img\n                            src={m.photos.small != null ? m.photos.small : \"https://freepikpsd.com/file/2019/10/default-user-image-png-4-Transparent-Images.png\"}\n                            className={s.usersPhoto}/>\n                            </NavLink>\n                    </div>\n                    <div>\n\n                        {m.followed ?\n                            <button disabled={props.followingInProgress.some(id => id === m.id)} onClick={() => {\n\n                             props.unFollowThunkCreator(m.id)\n                               /* props.toggleIsFollowingProgress(true, m.id)\n                                usersAPI.unFollow(m.id).then(response => {\n                                    if (response.data.resultCode === 0) {\n                                        props.unFollow(m.id)\n                                    }\n                                    props.toggleIsFollowingProgress(false, m.id)\n                                })*/\n\n                                // props.unFollow(m.id)\n                            }}>UnFollow</button> :\n                            <button disabled={props.followingInProgress.some(id => id === m.id)} onClick={() => {\n                                props.followThunkCreator(m.id)\n                                /*  props.toggleIsFollowingProgress(true,m.id)\n                                    usersAPI.follow(m.id).then(response => {\n                                          if (response.data.resultCode === 0) {\n                                              props.follow(m.id)\n                                          }\n                                          props.toggleIsFollowingProgress(false, m.id)\n                                      })*/\n\n                                //  props.follow(m.id)\n                            }}>Follow</button>}\n                    </div>\n                </span>\n            <span>\n                <span>\n                    <div>{m.name}</div><div>{m.status}</div>\n                </span>\n                <span>\n                  <div>{\"m.location.country\"}</div> <div>{\"m.location.city\"}</div>\n                </span>\n                </span>\n\n        </div>)}\n    </div>\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\Profile.tsx",["163","164","165","166","167"],"import React from \"react\";\nimport {MyPosts} from \"./MyPosts/MyPosts\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport s from \"./Profile.module.css\"\nimport {ActionType, stateType} from \"../../redux/store\";\nimport {AppStateType, StoreType} from \"../../redux/redux-store\";\nimport {SuperMyPostsContainer} from \"./MyPosts/MyPostsContainer\";\n\ntype profileType = {\n    profile: any\n    status:string\n    updateStatus:(status:string)=>void\n}\n\nexport const Profile: React.FC<profileType> = (props) => {\n\n    return (\n        <div className={s.content}>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <SuperMyPostsContainer/>\n            {/* <MyPostsContainer store={props.store}/>*/}\n        </div>)\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\Heder.tsx",["168","169"],"import React, {ReactNode} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./Heder.module.css\";\nimport {headerPropsType} from \"./HederContainer\";\n\n\n\nexport const Header = (props: headerPropsType) => {\n\n    return (\n        <header className={s.header}>\n            <img src=\"https://ichef.bbci.co.uk/news/640/cpsprodpb/FBD1/production/_115656446_eye1.jpg\"/>\n\n            <div className={s.loginBlock}>\n                {props.isAuth? props.login :<NavLink to={\"/login\"}>Login</NavLink>}\n            </div>\n\n        </header>\n    )\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",["170"],"import React from \"react\";\nimport s from \"./../Dialogs.module.css\"\nimport {NavLink} from \"react-router-dom\";\nimport {stateType} from \"../../../redux/store\";\nimport {AppStateType} from \"../../../redux/redux-store\";\n\ntype dialogsItemType ={\n    state:AppStateType\n}\n\nexport const DialogItem: React.FC<dialogsItemType> = (props) => {\n\n    /*let dialogs = [\n        {id: \"1\", name: \"Dymych\"},\n        {id: \"2\", name: \"Andrey\"},\n        {id: \"3\", name: \"Sveta\"},\n        {id: \"4\", name: \"Sasha\"},\n        {id: \"5\", name: \"Viktor\"},\n        {id: \"6\", name: \"Valera\"},\n    ]*/\n    return (\n            <div className={s.dialogsItems}>\n                {props.state.dialogsState.dialogs.map(d => <div className={s.dialogs + ' ' + s.active}>\n                    <NavLink to={\"/dialogs/\" + d.id}>{d.name}</NavLink>\n                </div>)}\n                {/*    <DialogItem name={dialogs[0].name} id={dialogs[0].id} />\n                <DialogItem name={dialogs[1].name} id={dialogs[1].id} />\n                <DialogItem name={dialogs[2].name} id={dialogs[2].id} />\n                <DialogItem name={dialogs[3].name} id={dialogs[3].id} />\n                <DialogItem name={dialogs[4].name} id={dialogs[4].id} />\n                <DialogItem name={dialogs[5].name} id={dialogs[5].id} />*/}\n\n            </div>\n    )\n}\n\n","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\MessageContainer.tsx",["171","172","173","174","175","176","177"],"D:\\js\\React_Sotialna_Set\\src\\components\\common\\Preloader\\Preloader.tsx",["178"],"import React from \"react\";\n\n\nexport let Preloader = () => {\n    return <div>\n        <img src={\"https://i.gifer.com/g0R5.gif\"}/>\n    </div>\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["179","180","181","182","183","184","185","186","187","188"],"D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["189"],"import s from \"./ProfileInfo.module.css\"\nimport {Preloader} from \"../../common/Preloader/Preloader\";\nimport { ProfileStatus } from \"./ProfileStatus\";\ntype ProfileInfoType={\n    profile:any\n    status:string\n    updateStatus:(status:string)=>void\n}\n\n\nexport const ProfileInfo = (props:ProfileInfoType) => {\n  if(!props.profile){\n      return  <Preloader/>\n  }\n\n    return <div>\n     {/*   <div>\n            <img src=\"https://img.gazeta.ru/files3/845/7947845/upload-shutterstock_117062077-pic905v-895x505-99863.jpg\"/>\n        </div>*/}\n        <div className={s.descriptionBlock}>\n            <img src={props.profile}/>\n           <ProfileStatus status = {props.status} updateStatus={props.updateStatus}/>\n        </div>\n    </div>\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\Message.tsx",["190","191","192","193","194","195"],"D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["196","197","198","199","200","201"],"D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["202"],"import React from \"react\";\nimport s from \"./Post.module.css\";\n\ntype PostType = {\n    message: string,\n    likeCount: number\n}\n\nexport const Post: React.FC<PostType> = (props) => {\n    return (\n        <div className={s.item}>\n            <img src=\"https://i.imgur.com/gqJvKwW.png\"/>\n            {props.message}\n            <div>\n                <span>like</span>{props.likeCount}\n            </div>\n        </div>\n    )\n}","D:\\js\\React_Sotialna_Set\\src\\api\\api.ts",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Login\\Login.tsx",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialigsContainer.tsx",["203"],"import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dialogs} from \"./Dialogs\";\r\n\r\n\r\nexport type mapStateToPropsType = {\r\n    state:AppStateType\r\n    //isAuth:boolean\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType):mapStateToPropsType=> {\r\n    return {\r\n        state: state,\r\n       // isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n//export const DialigsContainer = connect(mapStateToProps)(Dialogs);\r\n//export const DialigsContainer = connect(mapStateToProps)(withAuthRedirect(Dialogs));\r\nexport const DialigsContainer = compose<React.ComponentType>(connect(mapStateToProps),withAuthRedirect)(Dialogs);","D:\\js\\React_Sotialna_Set\\src\\hoc\\withAuthRedirect.tsx",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":3,"column":9,"nodeType":"210","messageId":"211","endLine":3,"endColumn":15},{"ruleId":"208","severity":1,"message":"212","line":6,"column":9,"nodeType":"210","messageId":"211","endLine":6,"endColumn":16},{"ruleId":"208","severity":1,"message":"213","line":7,"column":9,"nodeType":"210","messageId":"211","endLine":7,"endColumn":16},{"ruleId":"208","severity":1,"message":"214","line":1,"column":8,"nodeType":"210","messageId":"211","endLine":1,"endColumn":13},{"ruleId":"208","severity":1,"message":"215","line":2,"column":21,"nodeType":"210","messageId":"211","endLine":2,"endColumn":30},{"ruleId":"208","severity":1,"message":"216","line":3,"column":9,"nodeType":"210","messageId":"211","endLine":3,"endColumn":21},{"ruleId":"208","severity":1,"message":"214","line":1,"column":8,"nodeType":"210","messageId":"211","endLine":1,"endColumn":13},{"ruleId":"208","severity":1,"message":"215","line":4,"column":21,"nodeType":"210","messageId":"211","endLine":4,"endColumn":30},{"ruleId":"208","severity":1,"message":"214","line":1,"column":8,"nodeType":"210","messageId":"211","endLine":1,"endColumn":13},{"ruleId":"208","severity":1,"message":"214","line":1,"column":8,"nodeType":"210","messageId":"211","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"218","line":125,"column":65,"nodeType":"219","messageId":"220","endLine":125,"endColumn":67},{"ruleId":"208","severity":1,"message":"221","line":1,"column":16,"nodeType":"210","messageId":"211","endLine":1,"endColumn":27},{"ruleId":"208","severity":1,"message":"222","line":4,"column":9,"nodeType":"210","messageId":"211","endLine":4,"endColumn":16},{"ruleId":"208","severity":1,"message":"223","line":5,"column":9,"nodeType":"210","messageId":"211","endLine":5,"endColumn":19},{"ruleId":"208","severity":1,"message":"215","line":5,"column":21,"nodeType":"210","messageId":"211","endLine":5,"endColumn":30},{"ruleId":"208","severity":1,"message":"216","line":6,"column":9,"nodeType":"210","messageId":"211","endLine":6,"endColumn":21},{"ruleId":"208","severity":1,"message":"224","line":6,"column":23,"nodeType":"210","messageId":"211","endLine":6,"endColumn":32},{"ruleId":"208","severity":1,"message":"225","line":9,"column":9,"nodeType":"210","messageId":"211","endLine":9,"endColumn":17},{"ruleId":"208","severity":1,"message":"226","line":2,"column":18,"nodeType":"210","messageId":"211","endLine":2,"endColumn":36},{"ruleId":"208","severity":1,"message":"227","line":17,"column":8,"nodeType":"210","messageId":"211","endLine":17,"endColumn":13},{"ruleId":"208","severity":1,"message":"228","line":19,"column":9,"nodeType":"210","messageId":"211","endLine":19,"endColumn":17},{"ruleId":"208","severity":1,"message":"227","line":4,"column":8,"nodeType":"210","messageId":"211","endLine":4,"endColumn":13},{"ruleId":"208","severity":1,"message":"229","line":9,"column":5,"nodeType":"210","messageId":"211","endLine":9,"endColumn":21},{"ruleId":"208","severity":1,"message":"225","line":14,"column":9,"nodeType":"210","messageId":"211","endLine":14,"endColumn":17},{"ruleId":"208","severity":1,"message":"228","line":15,"column":9,"nodeType":"210","messageId":"211","endLine":15,"endColumn":17},{"ruleId":"208","severity":1,"message":"227","line":1,"column":8,"nodeType":"210","messageId":"211","endLine":1,"endColumn":13},{"ruleId":"208","severity":1,"message":"230","line":5,"column":9,"nodeType":"210","messageId":"211","endLine":5,"endColumn":20},{"ruleId":"208","severity":1,"message":"231","line":7,"column":10,"nodeType":"210","messageId":"211","endLine":7,"endColumn":17},{"ruleId":"208","severity":1,"message":"227","line":5,"column":8,"nodeType":"210","messageId":"211","endLine":5,"endColumn":13},{"ruleId":"208","severity":1,"message":"228","line":6,"column":9,"nodeType":"210","messageId":"211","endLine":6,"endColumn":17},{"ruleId":"232","severity":1,"message":"233","line":40,"column":25,"nodeType":"234","endLine":42,"endColumn":55},{"ruleId":"208","severity":1,"message":"235","line":2,"column":9,"nodeType":"210","messageId":"211","endLine":2,"endColumn":16},{"ruleId":"208","severity":1,"message":"223","line":5,"column":9,"nodeType":"210","messageId":"211","endLine":5,"endColumn":19},{"ruleId":"208","severity":1,"message":"215","line":5,"column":21,"nodeType":"210","messageId":"211","endLine":5,"endColumn":30},{"ruleId":"208","severity":1,"message":"216","line":6,"column":9,"nodeType":"210","messageId":"211","endLine":6,"endColumn":21},{"ruleId":"208","severity":1,"message":"224","line":6,"column":23,"nodeType":"210","messageId":"211","endLine":6,"endColumn":32},{"ruleId":"208","severity":1,"message":"236","line":1,"column":16,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"232","severity":1,"message":"233","line":12,"column":13,"nodeType":"234","endLine":12,"endColumn":105},{"ruleId":"208","severity":1,"message":"215","line":4,"column":9,"nodeType":"210","messageId":"211","endLine":4,"endColumn":18},{"ruleId":"208","severity":1,"message":"214","line":1,"column":8,"nodeType":"210","messageId":"211","endLine":1,"endColumn":13},{"ruleId":"208","severity":1,"message":"237","line":2,"column":9,"nodeType":"210","messageId":"211","endLine":2,"endColumn":16},{"ruleId":"208","severity":1,"message":"238","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":9},{"ruleId":"208","severity":1,"message":"221","line":4,"column":9,"nodeType":"210","messageId":"211","endLine":4,"endColumn":20},{"ruleId":"208","severity":1,"message":"223","line":5,"column":9,"nodeType":"210","messageId":"211","endLine":5,"endColumn":19},{"ruleId":"208","severity":1,"message":"215","line":5,"column":21,"nodeType":"210","messageId":"211","endLine":5,"endColumn":30},{"ruleId":"208","severity":1,"message":"239","line":13,"column":6,"nodeType":"210","messageId":"211","endLine":13,"endColumn":26},{"ruleId":"232","severity":1,"message":"233","line":6,"column":9,"nodeType":"234","endLine":6,"endColumn":52},{"ruleId":"208","severity":1,"message":"214","line":1,"column":8,"nodeType":"210","messageId":"211","endLine":1,"endColumn":13},{"ruleId":"208","severity":1,"message":"240","line":1,"column":16,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"238","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":9},{"ruleId":"208","severity":1,"message":"241","line":3,"column":9,"nodeType":"210","messageId":"211","endLine":3,"endColumn":13},{"ruleId":"208","severity":1,"message":"223","line":5,"column":9,"nodeType":"210","messageId":"211","endLine":5,"endColumn":19},{"ruleId":"208","severity":1,"message":"215","line":5,"column":21,"nodeType":"210","messageId":"211","endLine":5,"endColumn":30},{"ruleId":"208","severity":1,"message":"222","line":9,"column":9,"nodeType":"210","messageId":"211","endLine":9,"endColumn":16},{"ruleId":"208","severity":1,"message":"242","line":11,"column":9,"nodeType":"210","messageId":"211","endLine":11,"endColumn":22},{"ruleId":"208","severity":1,"message":"243","line":11,"column":24,"nodeType":"210","messageId":"211","endLine":11,"endColumn":46},{"ruleId":"208","severity":1,"message":"244","line":16,"column":6,"nodeType":"210","messageId":"211","endLine":16,"endColumn":26},{"ruleId":"232","severity":1,"message":"233","line":21,"column":13,"nodeType":"234","endLine":21,"endColumn":39},{"ruleId":"208","severity":1,"message":"237","line":2,"column":9,"nodeType":"210","messageId":"211","endLine":2,"endColumn":16},{"ruleId":"208","severity":1,"message":"223","line":5,"column":9,"nodeType":"210","messageId":"211","endLine":5,"endColumn":19},{"ruleId":"208","severity":1,"message":"215","line":5,"column":21,"nodeType":"210","messageId":"211","endLine":5,"endColumn":30},{"ruleId":"208","severity":1,"message":"242","line":6,"column":9,"nodeType":"210","messageId":"211","endLine":6,"endColumn":22},{"ruleId":"208","severity":1,"message":"243","line":6,"column":24,"nodeType":"210","messageId":"211","endLine":6,"endColumn":46},{"ruleId":"208","severity":1,"message":"245","line":25,"column":9,"nodeType":"210","messageId":"211","endLine":25,"endColumn":27},{"ruleId":"208","severity":1,"message":"240","line":1,"column":16,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"246","line":4,"column":9,"nodeType":"210","messageId":"211","endLine":4,"endColumn":18},{"ruleId":"208","severity":1,"message":"247","line":4,"column":20,"nodeType":"210","messageId":"211","endLine":4,"endColumn":39},{"ruleId":"208","severity":1,"message":"223","line":5,"column":9,"nodeType":"210","messageId":"211","endLine":5,"endColumn":19},{"ruleId":"208","severity":1,"message":"215","line":5,"column":21,"nodeType":"210","messageId":"211","endLine":5,"endColumn":30},{"ruleId":"208","severity":1,"message":"248","line":39,"column":9,"nodeType":"210","messageId":"211","endLine":39,"endColumn":21},{"ruleId":"232","severity":1,"message":"233","line":12,"column":13,"nodeType":"234","endLine":12,"endColumn":57},{"ruleId":"208","severity":1,"message":"249","line":3,"column":18,"nodeType":"210","messageId":"211","endLine":3,"endColumn":26},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'Dialogs' is defined but never used.","'React' is defined but never used.","'stateType' is defined but never used.","'AppStateType' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'ChangeEvent' is defined but never used.","'Message' is defined but never used.","'ActionType' is defined but never used.","'StoreType' is defined but never used.","'Redirect' is defined but never used.","'MapDispatchToProps' is defined but never used.","'axios' is defined but never used.","'usersAPI' is defined but never used.","'setUserProfileAC' is defined but never used.","'setUserDate' is defined but never used.","'authAPI' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MyPosts' is defined but never used.","'ReactNode' is defined but never used.","'NavLink' is defined but never used.","'s' is defined but never used.","'messageContainerType' is defined but never used.","'RefObject' is defined but never used.","'Post' is defined but never used.","'sendMessageAC' is defined but never used.","'updateNewMessageTextAC' is defined but never used.","'MyPostsContainerType' is defined but never used.","'onNewMessageChange' is assigned a value but never used.","'addPostAC' is defined but never used.","'updateNewPostTextAC' is defined but never used.","'onPostChange' is assigned a value but never used.","'Dispatch' is defined but never used.","no-global-assign","no-unsafe-negation"]