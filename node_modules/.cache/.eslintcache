[{"D:\\js\\React_Sotialna_Set\\src\\index.tsx":"1","D:\\js\\React_Sotialna_Set\\src\\redux\\redux-store.ts":"2","D:\\js\\React_Sotialna_Set\\src\\App.tsx":"3","D:\\js\\React_Sotialna_Set\\src\\redux\\dialogs-reducer.tsx":"4","D:\\js\\React_Sotialna_Set\\src\\redux\\profile-reducer.tsx":"5","D:\\js\\React_Sotialna_Set\\src\\redux\\auth-reducer.tsx":"6","D:\\js\\React_Sotialna_Set\\src\\redux\\users-reducer.tsx":"7","D:\\js\\React_Sotialna_Set\\src\\components\\Navbar\\Navbar.tsx":"8","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Dialogs.tsx":"9","D:\\js\\React_Sotialna_Set\\src\\components\\Users\\UsersContainer.tsx":"10","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileContainer.tsx":"11","D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\HederContainer.tsx":"12","D:\\js\\React_Sotialna_Set\\src\\components\\Users\\Users.tsx":"13","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\Profile.tsx":"14","D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\Heder.tsx":"15","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"16","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\MessageContainer.tsx":"17","D:\\js\\React_Sotialna_Set\\src\\components\\common\\Preloader\\Preloader.tsx":"18","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"19","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"20","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\Message.tsx":"21","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"22","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"23","D:\\js\\React_Sotialna_Set\\src\\api\\api.ts":"24","D:\\js\\React_Sotialna_Set\\src\\components\\Login\\Login.tsx":"25","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialigsContainer.tsx":"26"},{"size":879,"mtime":1648381726000,"results":"27","hashOfConfig":"28"},{"size":672,"mtime":1649869966888,"results":"29","hashOfConfig":"28"},{"size":1735,"mtime":1649967361196,"results":"30","hashOfConfig":"28"},{"size":1341,"mtime":1648381726000,"results":"31","hashOfConfig":"28"},{"size":1822,"mtime":1649934154908,"results":"32","hashOfConfig":"28"},{"size":1347,"mtime":1649934983428,"results":"33","hashOfConfig":"28"},{"size":5176,"mtime":1649933858703,"results":"34","hashOfConfig":"28"},{"size":942,"mtime":1648381726000,"results":"35","hashOfConfig":"28"},{"size":733,"mtime":1649968775062,"results":"36","hashOfConfig":"28"},{"size":5590,"mtime":1649881502807,"results":"37","hashOfConfig":"28"},{"size":2170,"mtime":1649968744472,"results":"38","hashOfConfig":"28"},{"size":1429,"mtime":1649934983438,"results":"39","hashOfConfig":"28"},{"size":3516,"mtime":1649881461909,"results":"40","hashOfConfig":"28"},{"size":656,"mtime":1648381726000,"results":"41","hashOfConfig":"28"},{"size":553,"mtime":1649866825234,"results":"42","hashOfConfig":"28"},{"size":1306,"mtime":1648381726000,"results":"43","hashOfConfig":"28"},{"size":1751,"mtime":1648381726000,"results":"44","hashOfConfig":"28"},{"size":141,"mtime":1648381726000,"results":"45","hashOfConfig":"28"},{"size":2067,"mtime":1648381726000,"results":"46","hashOfConfig":"28"},{"size":563,"mtime":1648381726000,"results":"47","hashOfConfig":"28"},{"size":1506,"mtime":1648381726000,"results":"48","hashOfConfig":"28"},{"size":2073,"mtime":1648381726000,"results":"49","hashOfConfig":"28"},{"size":421,"mtime":1648381726000,"results":"50","hashOfConfig":"28"},{"size":841,"mtime":1649932630273,"results":"51","hashOfConfig":"28"},{"size":109,"mtime":1649965745719,"results":"52","hashOfConfig":"28"},{"size":499,"mtime":1649967802682,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"3qnupp",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\js\\React_Sotialna_Set\\src\\index.tsx",[],["121","122"],"D:\\js\\React_Sotialna_Set\\src\\redux\\redux-store.ts",[],"D:\\js\\React_Sotialna_Set\\src\\App.tsx",["123","124","125"],"D:\\js\\React_Sotialna_Set\\src\\redux\\dialogs-reducer.tsx",["126","127","128"],"import React from \"react\"\nimport {ActionType, stateType} from \"./store\";\nimport {AppStateType} from \"./redux-store\";\n\n\nlet initialState = {\n    messages: [\n        {id: \"1\", message: \"Hi\"},\n        {id: \"2\", message: \"How is you it?\"},\n        {id: \"3\", message: \"Yo\"},\n        {id: \"4\", message: \"ccccc\"},\n        {id: \"5\", message: \"tttttt\"},\n        {id: \"6\", message: \"yyyyyyy\"},\n    ],\n    dialogs: [\n        {id: \"1\", name: \"Dymych\"},\n        {id: \"2\", name: \"Andrey\"},\n        {id: \"3\", name: \"Sveta\"},\n        {id: \"4\", name: \"Sasha\"},\n        {id: \"5\", name: \"Viktor\"},\n        {id: \"6\", name: \"Valera\"},\n    ],\n    newMessageBody: \"\"\n}\n\n\nexport const dialogsReducer = (state = initialState, action: ActionType) => {\n\n\n    switch (action.type) {\n        case \"UPDATE-NEW-MESSAGE-TEXT\": {\n            return {...state, newMessageBody: action.body};\n        }\n        case \"SEND-MESSAGE\": {\n            return {\n                ...state,\n                newMessageBody: \"\",\n                messages: [...state.messages, {id: \"1\", message: state.newMessageBody}]\n            };\n        }\n        default:\n            return state\n    }\n}\n\nexport const addPostAC = () => {\n    return {type: \"ADD-POST\"} as const\n\n}\n\nexport const updateNewPostTextAC = (newText: string) => {\n    return {type: \"UPDATE-NEW-POST-TEX\", newText} as const\n}\n\n","D:\\js\\React_Sotialna_Set\\src\\redux\\profile-reducer.tsx",["129","130"],"D:\\js\\React_Sotialna_Set\\src\\redux\\auth-reducer.tsx",["131"],"D:\\js\\React_Sotialna_Set\\src\\redux\\users-reducer.tsx",["132","133"],"D:\\js\\React_Sotialna_Set\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Dialogs.tsx",["134","135","136","137","138","139"],"D:\\js\\React_Sotialna_Set\\src\\components\\Users\\UsersContainer.tsx",["140","141","142"],"import React from \"react\";\nimport {connect, MapDispatchToProps} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\nimport {\n    followAC,\n    followThunkCreator,\n    getUsersThunkCreator,\n    setCurrentPageAC, setTotalUsersCountAC,\n    setUsersAC, toggleFetchingAC,\n    toggleIsFollowingIsProgress,\n    unFollowAC,\n    unFollowThunkCreator,\n    userType\n} from \"../../redux/users-reducer\";\nimport {Users} from \"./Users\";\nimport axios from \"axios\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\nimport {usersAPI} from \"../../api/api\";\n\nexport type mapStateToPropsType = {\n    users: AppStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: string[]\n}\nexport type mapDispatchToPropsType = {\n    follow: (userId: string) => void\n    unFollow: (userId: string) => void\n    setUsers: (users: Array<userType>) => void\n    setCurrentPage: (currentPage: number) => void\n    setTotalUsersCount: (totalCount: number) => void\n    toggleIsFetching: (isFetching: boolean) => void\n    toggleIsFollowingProgress: (isFetching: boolean, userId: string) => void\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\n    followThunkCreator: (userId: string) => void\n    unFollowThunkCreator:(userId: string)=>void\n}\n\n\nexport type UsersPropsType = mapStateToPropsType & mapDispatchToPropsType\n\nexport class UsersAPIComponent extends React.Component<UsersPropsType> {\n\n\n    componentDidMount() {\n        // this.props.toggleIsFetching(true);\n        /*        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`,\n                    {\n                        withCredentials:true\n                    }).then(response => {\n                    this.props.toggleIsFetching(false)\n                    this.props.setUsers(response.data.items)\n                    this.props.setTotalUsersCount(response.data.totalCount)/// должно быть в onPageChanged\n                });\n            }*/\n\n        /* usersAPI.getUsers(this.props.currentPage,this.props.pageSize).then(data => {\n             this.props.toggleIsFetching(false)\n             this.props.setUsers(data.items)\n             this.props.setTotalUsersCount(data.totalCount)/// должно быть в onPageChanged\n         });*/\n\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\n\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        this.props.setCurrentPage(pageNumber)//не должно быть сдесь нужно рефакторить\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\n        /*this.props.setCurrentPage(pageNumber);\n        this.props.toggleIsFetching(true);\n\n            usersAPI.getUsers(pageNumber,this.props.pageSize).then(data => {\n            this.props.toggleIsFetching(false);\n            this.props.setUsers(data.items)\n            this.props.setTotalUsersCount(data.totalCount)\n        });*/\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users\n                totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                onPageChanged={this.onPageChanged}\n                users={this.props.users}\n                currentPage={this.props.currentPage}\n                unFollow={this.props.unFollow}\n                follow={this.props.follow}\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\n                followingInProgress={this.props.followingInProgress}\n                followThunkCreator={this.props.followThunkCreator}\n                unFollowThunkCreator={this.props.unFollowThunkCreator}\n\n            />;\n        </>\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        users: state,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n    return {\n        follow: (userId: string) => {\n            dispatch(followAC(userId))\n        },\n        unFollow: (userId: string) => {\n            dispatch(unFollowAC(userId))\n        },\n        setUsers: (users: Array<userType>) => {\n            dispatch(setUsersAC(users))\n        },\n        setCurrentPage: (currentPage: number) => {\n            dispatch(setCurrentPageAC(currentPage))\n        },\n        setTotalUsersCount: (totalCount: number) => {\n            dispatch(setTotalUsersCountAC(totalCount))\n        },\n        toggleIsFetching: (isFetching: boolean) => {\n            dispatch(toggleFetchingAC(isFetching))\n        },\n        toggleIsFollowingProgress: (isFetching: boolean, userId: string) => {\n            dispatch(toggleIsFollowingIsProgress(isFetching, userId))\n        },\n        getUsersThunkCreator: (currentPage: number, pageSize: number) => {\n            getUsersThunkCreator(currentPage, pageSize)(dispatch)\n        },\n        followThunkCreator: ( userId: string) => {\n            followThunkCreator(userId)(dispatch)\n        },\n        unFollowThunkCreator:(userId: string)=>{\n            unFollowThunkCreator(userId)(dispatch)\n        }\n\n    }\n}\n\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent)","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileContainer.tsx",["143","144","145"],"D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\HederContainer.tsx",["146","147","148"],"import axios from \"axios\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Header} from \"./Heder\";\nimport {setUserDate, setUsersDataThunk} from \"../../redux/auth-reducer\";\nimport { AppStateType } from \"../../redux/redux-store\";\nimport { authAPI } from \"../../api/api\";\n\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n    login: string\n}\nexport type mapDispatchToPropsType = {\n    setUsersDataThunk:()=>void\n}\nexport type headerPropsType = mapStateToPropsType & mapDispatchToPropsType\n\nexport class HeaderContainer1 extends React.Component<headerPropsType> {\n    componentDidMount() {\n     /*   axios.get(\"https://social-network.samuraijs.com/api/1.0/auth/me\", {\n            withCredentials: true\n        })\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    let email = response.data.data.email;\n                    let id = response.data.data.id;\n                    let login = response.data.data.login;\n                    this.props.setUserDate(email,id,  login)\n                }\n            })*/\n\n        this.props.setUsersDataThunk()\n    }\n\n    render() {\n        return <Header {...this.props}/>\n\n    }\n}\n\nconst MapStateToProps = (state: AppStateType):mapStateToPropsType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n\n\n})\n\n\nexport const HeaderContainer = connect(MapStateToProps, {setUsersDataThunk})(HeaderContainer1)","D:\\js\\React_Sotialna_Set\\src\\components\\Users\\Users.tsx",["149","150","151"],"import React from \"react\";\nimport s from \"./users.module.css\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {NavLink} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {usersAPI} from \"../../api/api\";\n\ntype UsersPropsType = {\n    totalUsersCount: number\n    pageSize: number\n    onPageChanged: (pageNumber: number) => void\n    users: AppStateType\n    currentPage: number\n    unFollow: (id: string) => void\n    follow: (id: string) => void\n    toggleIsFollowingProgress: (isFetching: boolean, userId: string) => void\n    followingInProgress: string[]\n    followThunkCreator: (userId: string) => void\n    unFollowThunkCreator:(userId: string) => void\n}\n\n\nexport let Users: React.FC<UsersPropsType> = (props) => {\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    return <div>\n        {pages.map(p => {\n            return <span className={props.currentPage === p ? s.selectedPage : \"\"} onClick={() => {\n                props.onPageChanged(p)\n            }}>{p} </span>\n        })}\n        {props.users.usersPage.users.map(m => <div key={m.id}>\n                <span>\n                    <div>\n                        <NavLink to={\"/profile/\" + m.id}>\n                        <img\n                            src={m.photos.small != null ? m.photos.small : \"https://freepikpsd.com/file/2019/10/default-user-image-png-4-Transparent-Images.png\"}\n                            className={s.usersPhoto}/>\n                            </NavLink>\n                    </div>\n                    <div>\n\n                        {m.followed ?\n                            <button disabled={props.followingInProgress.some(id => id === m.id)} onClick={() => {\n\n                             props.unFollowThunkCreator(m.id)\n                               /* props.toggleIsFollowingProgress(true, m.id)\n                                usersAPI.unFollow(m.id).then(response => {\n                                    if (response.data.resultCode === 0) {\n                                        props.unFollow(m.id)\n                                    }\n                                    props.toggleIsFollowingProgress(false, m.id)\n                                })*/\n\n                                // props.unFollow(m.id)\n                            }}>UnFollow</button> :\n                            <button disabled={props.followingInProgress.some(id => id === m.id)} onClick={() => {\n                                props.followThunkCreator(m.id)\n                                /*  props.toggleIsFollowingProgress(true,m.id)\n                                    usersAPI.follow(m.id).then(response => {\n                                          if (response.data.resultCode === 0) {\n                                              props.follow(m.id)\n                                          }\n                                          props.toggleIsFollowingProgress(false, m.id)\n                                      })*/\n\n                                //  props.follow(m.id)\n                            }}>Follow</button>}\n                    </div>\n                </span>\n            <span>\n                <span>\n                    <div>{m.name}</div><div>{m.status}</div>\n                </span>\n                <span>\n                  <div>{\"m.location.country\"}</div> <div>{\"m.location.city\"}</div>\n                </span>\n                </span>\n\n        </div>)}\n    </div>\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\Profile.tsx",["152","153","154","155","156"],"import React from \"react\";\nimport {MyPosts} from \"./MyPosts/MyPosts\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport s from \"./Profile.module.css\"\nimport {ActionType, stateType} from \"../../redux/store\";\nimport {AppStateType, StoreType} from \"../../redux/redux-store\";\nimport {SuperMyPostsContainer} from \"./MyPosts/MyPostsContainer\";\n\ntype profileType={\nprofile:any\n}\n\nexport const Profile: React.FC<profileType> = (props) => {\n\n    return (\n        <div className={s.content}>\n            <ProfileInfo profile={props.profile}/>\n           <SuperMyPostsContainer/>\n           {/* <MyPostsContainer store={props.store}/>*/}\n        </div>)\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\Heder.tsx",["157","158"],"import React, {ReactNode} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./Heder.module.css\";\nimport {headerPropsType} from \"./HederContainer\";\n\n\n\nexport const Header = (props: headerPropsType) => {\n\n    return (\n        <header className={s.header}>\n            <img src=\"https://ichef.bbci.co.uk/news/640/cpsprodpb/FBD1/production/_115656446_eye1.jpg\"/>\n\n            <div className={s.loginBlock}>\n                {props.isAuth? props.login :<NavLink to={\"/login\"}>Login</NavLink>}\n            </div>\n\n        </header>\n    )\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",["159"],"import React from \"react\";\nimport s from \"./../Dialogs.module.css\"\nimport {NavLink} from \"react-router-dom\";\nimport {stateType} from \"../../../redux/store\";\nimport {AppStateType} from \"../../../redux/redux-store\";\n\ntype dialogsItemType ={\n    state:AppStateType\n}\n\nexport const DialogItem: React.FC<dialogsItemType> = (props) => {\n\n    /*let dialogs = [\n        {id: \"1\", name: \"Dymych\"},\n        {id: \"2\", name: \"Andrey\"},\n        {id: \"3\", name: \"Sveta\"},\n        {id: \"4\", name: \"Sasha\"},\n        {id: \"5\", name: \"Viktor\"},\n        {id: \"6\", name: \"Valera\"},\n    ]*/\n    return (\n            <div className={s.dialogsItems}>\n                {props.state.dialogsState.dialogs.map(d => <div className={s.dialogs + ' ' + s.active}>\n                    <NavLink to={\"/dialogs/\" + d.id}>{d.name}</NavLink>\n                </div>)}\n                {/*    <DialogItem name={dialogs[0].name} id={dialogs[0].id} />\n                <DialogItem name={dialogs[1].name} id={dialogs[1].id} />\n                <DialogItem name={dialogs[2].name} id={dialogs[2].id} />\n                <DialogItem name={dialogs[3].name} id={dialogs[3].id} />\n                <DialogItem name={dialogs[4].name} id={dialogs[4].id} />\n                <DialogItem name={dialogs[5].name} id={dialogs[5].id} />*/}\n\n            </div>\n    )\n}\n\n","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\MessageContainer.tsx",["160","161","162","163","164","165"],"import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\"\nimport {ChangeEvent} from \"react\";\nimport {ActionType, stateType} from \"../../../redux/store\";\nimport {sendMessageAC, updateNewMessageTextAC} from \"../../../redux/profile-reducer\";\nimport {AppStateType, StoreType} from \"../../../redux/redux-store\";\nimport {Message} from \"./Message\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\n\n\ntype messageContainerType = {\n    store: StoreType\n}\n\nexport  const MessageContainer: React.FC<messageContainerType> = (props) => {\n\n    /*let messages = [\n        {id: \"1\", message: \"Hi\"},\n        {id: \"2\", message: \"How is you it?\"},\n        {id: \"3\", message: \"Yo\"},\n        {id: \"4\", message: \"ccccc\"},\n        {id: \"5\", message: \"tttttt\"},\n        {id: \"6\", message: \"yyyyyyy\"},\n    ]*/\n    let newMessageBody = props.store.getState().dialogsState.newMessageBody;\n\n    let onNewMessageChange = (body: string) => {\n        props.store.dispatch(updateNewMessageTextAC(body))\n    }\n\n    let onSendMessageClick = () => {\n        props.store.dispatch(sendMessageAC())\n    }\n    return (\n        <Message state={props.store.getState()}  onNewMessageChange={onNewMessageChange}\n                 onSendMessageClick={onSendMessageClick}/>\n    )\n}\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        state: state\n    }\n}\n\n\nlet mapDispatchToProps = (dispatch:Dispatch) => {\n    return {\n        onNewMessageChange:(body:string)=>{\n            dispatch(updateNewMessageTextAC(body))\n        },\n        onSendMessageClick:()=>{\n            dispatch(sendMessageAC())\n        }\n    }\n}\n\nexport const SuperMessageContainer = connect(mapStateToProps, mapDispatchToProps)(Message);","D:\\js\\React_Sotialna_Set\\src\\components\\common\\Preloader\\Preloader.tsx",["166"],"import React from \"react\";\n\n\nexport let Preloader = () => {\n    return <div>\n        <img src={\"https://i.gifer.com/g0R5.gif\"}/>\n    </div>\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["167","168","169","170","171","172","173","174","175","176"],"import React, {RefObject} from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport {Post} from \"./Post/Post\";\nimport {addPostAC, updateNewPostTextAC} from \"../../../redux/dialogs-reducer\";\nimport {ActionType, stateType} from \"../../../redux/store\";\nimport {AppStateType, StoreType} from \"../../../redux/redux-store\";\n\nimport {connect} from \"react-redux\";\nimport {Message} from \"../../Dialogs/Message/Message\";\nimport {Dispatch} from \"redux\";\nimport {sendMessageAC, updateNewMessageTextAC} from \"../../../redux/profile-reducer\";\nimport {MyPosts} from \"./MyPosts\";\n\n\n\ntype MyPostsContainerType = {\n    store:StoreType\n}\n\n/*export const MyPostsContainer: React.FC<MyPostsContainerType> = (props) => {\n\n    /!*let postData = [\n        {id: \"1\", message: \"Hi, how are you?\", likesCount: 12},\n        {id: \"2\", message: \"It's my first post\", likesCount: 5},\n        {id: \"3\", message: \"aaaaaaaaaaaaaaa\", likesCount: 5},\n\n    ]\n\n*!/\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\n\n    let onAddPost = () => {\n        // props.addPost()\n        props.store.dispatch(addPostAC())\n\n    }\n    let onPostChange = (text:string) => {\n        //let text = newPostElement.current? newPostElement.current.value: \"\"\n        props.store.dispatch(updateNewPostTextAC(text))\n        /!*props.dispatch({type: \"UPDATE-NEW-POST-TEX\", newText: newPostElement.current? newPostElement.current.value: \"\"})*!/\n        /!*if (newPostElement.current) {\n            props.updateNewPostText(newPostElement.current.value)\n        }*!/\n    }\n\n    return (<MyPosts updateNewPostText={onPostChange} addPost ={onAddPost} posts={props.store.getState()}/> )\n}*/\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        posts: state\n    }\n}\n\n\nlet mapDispatchToProps = (dispatch:Dispatch) => {\n    return {\n        updateNewPostText:(text:string)=>{\n            dispatch(updateNewPostTextAC(text))\n        },\n        addPost:()=>{\n            dispatch(addPostAC())\n        }\n    }\n}\n\nexport const SuperMyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["177","178"],"import s from \"./ProfileInfo.module.css\"\nimport {Preloader} from \"../../common/Preloader/Preloader\";\ntype ProfileInfoType={\n    profile:any\n}\n\n\nexport const ProfileInfo = (props:ProfileInfoType) => {\n  if(!props.profile){\n      return  <Preloader/>\n  }\n\n    return <div>\n        <div>\n            <img src=\"https://img.gazeta.ru/files3/845/7947845/upload-shutterstock_117062077-pic905v-895x505-99863.jpg\"/>\n        </div>\n        <div className={s.descriptionBlock}>\n            <img src={props.profile}/>\n            ava + description\n        </div>\n    </div>\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\Message.tsx",["179","180","181","182","183"],"import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\"\nimport {ChangeEvent} from \"react\";\nimport {ActionType, stateType} from \"../../../redux/store\";\nimport {sendMessageAC, updateNewMessageTextAC} from \"../../../redux/profile-reducer\";\nimport {AppStateType} from \"../../../redux/redux-store\";\n\n\ntype messageType = {\n    state:AppStateType\n    onNewMessageChange:(body:string)=>void\n    onSendMessageClick:()=>void\n}\n\nexport const Message: React.FC<messageType> = (props) => {\n\n    let newMessageBody=props.state.dialogsState.newMessageBody\n\n    let onNewMessageChange = (e:ChangeEvent<HTMLTextAreaElement>) => {\n        let body = e.target.value;\n     props.onNewMessageChange(body)\n    }\n\n    let onSendMessageClick = () => {\n        props.onSendMessageClick();\n    }\n\n    return (\n        <div className={s.messages}>\n            <div> {props.state.dialogsState.messages.map(m => <div className={s.messages}>{m.message}</div>)}</div>\n            {/* <Message message={messages[0].message}/>\n               <Message message={messages[1].message}/>\n               <Message message={messages[2].message}/>*/}\n            <div>\n                <div><textarea placeholder=\"Enter your message\" value={newMessageBody}\n                               onChange={onNewMessageChange}></textarea></div>\n                <div>\n                    <button onClick={onSendMessageClick}>send</button>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\n","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["184","185","186","187","188"],"import React, {RefObject} from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport {Post} from \"./Post/Post\";\nimport {addPostAC, updateNewPostTextAC} from \"../../../redux/dialogs-reducer\";\nimport {ActionType, stateType} from \"../../../redux/store\";\nimport {AppStateType} from \"../../../redux/redux-store\";\n\n\n\ntype myPostsType = {\n    updateNewPostText:(text:string)=>void\n    addPost:()=>void\n    posts:AppStateType\n}\n\nexport const MyPosts: React.FC<myPostsType> = (props) => {\n\n    /*let postData = [\n        {id: \"1\", message: \"Hi, how are you?\", likesCount: 12},\n        {id: \"2\", message: \"It's my first post\", likesCount: 5},\n        {id: \"3\", message: \"aaaaaaaaaaaaaaa\", likesCount: 5},\n\n    ]\n\n*/\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\n\n    let addPost = () => {\n         props.addPost()\n        //props.dispatch(addPostAC())\n\n    }\n    let onPostChange = () => {\n      // let text = newPostElement.current? newPostElement.current.value: \"\"\n       // props.dispatch(updateNewPostTextAC(text))\n        /*props.dispatch({type: \"UPDATE-NEW-POST-TEX\", newText: newPostElement.current? newPostElement.current.value: \"\"})*/\n        if (newPostElement.current) {\n            props.updateNewPostText(newPostElement.current.value)\n        }\n\n    }\n\n\n    return (\n\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <div>\n                    <textarea ref={newPostElement} value={props.posts.profileState.newPostText} onChange={onPostChange}/>\n                </div>\n                <div>\n                    <button onClick={addPost}>Add post</button>\n                </div>\n                <div className={s.posts}>\n\n                    {props.posts.profileState.postData.map(p => <Post message={p.message} likeCount={p.likesCount}/>)}\n\n                    {/* <Post message={postData[0].message} likeCount={postData[0].likesCount}/>\n                    <Post message={postData[1].message} likeCount={postData[1].likesCount}/>*/}\n                </div>\n            </div>\n        </div>\n    )\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["189"],"import React from \"react\";\nimport s from \"./Post.module.css\";\n\ntype PostType = {\n    message: string,\n    likeCount: number\n}\n\nexport const Post: React.FC<PostType> = (props) => {\n    return (\n        <div className={s.item}>\n            <img src=\"https://i.imgur.com/gqJvKwW.png\"/>\n            {props.message}\n            <div>\n                <span>like</span>{props.likeCount}\n            </div>\n        </div>\n    )\n}","D:\\js\\React_Sotialna_Set\\src\\api\\api.ts",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Login\\Login.tsx",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialigsContainer.tsx",["190","191"],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":3,"column":9,"nodeType":"198","messageId":"199","endLine":3,"endColumn":15},{"ruleId":"196","severity":1,"message":"200","line":6,"column":9,"nodeType":"198","messageId":"199","endLine":6,"endColumn":16},{"ruleId":"196","severity":1,"message":"201","line":7,"column":9,"nodeType":"198","messageId":"199","endLine":7,"endColumn":16},{"ruleId":"196","severity":1,"message":"202","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"203","line":2,"column":21,"nodeType":"198","messageId":"199","endLine":2,"endColumn":30},{"ruleId":"196","severity":1,"message":"204","line":3,"column":9,"nodeType":"198","messageId":"199","endLine":3,"endColumn":21},{"ruleId":"196","severity":1,"message":"202","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"203","line":4,"column":21,"nodeType":"198","messageId":"199","endLine":4,"endColumn":30},{"ruleId":"196","severity":1,"message":"202","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"202","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"205","severity":1,"message":"206","line":125,"column":65,"nodeType":"207","messageId":"208","endLine":125,"endColumn":67},{"ruleId":"196","severity":1,"message":"209","line":1,"column":16,"nodeType":"198","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"196","severity":1,"message":"210","line":4,"column":9,"nodeType":"198","messageId":"199","endLine":4,"endColumn":16},{"ruleId":"196","severity":1,"message":"211","line":5,"column":9,"nodeType":"198","messageId":"199","endLine":5,"endColumn":19},{"ruleId":"196","severity":1,"message":"203","line":5,"column":21,"nodeType":"198","messageId":"199","endLine":5,"endColumn":30},{"ruleId":"196","severity":1,"message":"204","line":6,"column":9,"nodeType":"198","messageId":"199","endLine":6,"endColumn":21},{"ruleId":"196","severity":1,"message":"212","line":6,"column":23,"nodeType":"198","messageId":"199","endLine":6,"endColumn":32},{"ruleId":"196","severity":1,"message":"213","line":2,"column":18,"nodeType":"198","messageId":"199","endLine":2,"endColumn":36},{"ruleId":"196","severity":1,"message":"214","line":17,"column":8,"nodeType":"198","messageId":"199","endLine":17,"endColumn":13},{"ruleId":"196","severity":1,"message":"215","line":19,"column":9,"nodeType":"198","messageId":"199","endLine":19,"endColumn":17},{"ruleId":"196","severity":1,"message":"214","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":13},{"ruleId":"196","severity":1,"message":"216","line":6,"column":30,"nodeType":"198","messageId":"199","endLine":6,"endColumn":46},{"ruleId":"196","severity":1,"message":"215","line":10,"column":10,"nodeType":"198","messageId":"199","endLine":10,"endColumn":18},{"ruleId":"196","severity":1,"message":"214","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"217","line":5,"column":9,"nodeType":"198","messageId":"199","endLine":5,"endColumn":20},{"ruleId":"196","severity":1,"message":"218","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":17},{"ruleId":"196","severity":1,"message":"214","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":13},{"ruleId":"196","severity":1,"message":"215","line":6,"column":9,"nodeType":"198","messageId":"199","endLine":6,"endColumn":17},{"ruleId":"219","severity":1,"message":"220","line":40,"column":25,"nodeType":"221","endLine":42,"endColumn":55},{"ruleId":"196","severity":1,"message":"222","line":2,"column":9,"nodeType":"198","messageId":"199","endLine":2,"endColumn":16},{"ruleId":"196","severity":1,"message":"211","line":5,"column":9,"nodeType":"198","messageId":"199","endLine":5,"endColumn":19},{"ruleId":"196","severity":1,"message":"203","line":5,"column":21,"nodeType":"198","messageId":"199","endLine":5,"endColumn":30},{"ruleId":"196","severity":1,"message":"204","line":6,"column":9,"nodeType":"198","messageId":"199","endLine":6,"endColumn":21},{"ruleId":"196","severity":1,"message":"212","line":6,"column":23,"nodeType":"198","messageId":"199","endLine":6,"endColumn":32},{"ruleId":"196","severity":1,"message":"223","line":1,"column":16,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"219","severity":1,"message":"220","line":12,"column":13,"nodeType":"221","endLine":12,"endColumn":105},{"ruleId":"196","severity":1,"message":"203","line":4,"column":9,"nodeType":"198","messageId":"199","endLine":4,"endColumn":18},{"ruleId":"196","severity":1,"message":"224","line":2,"column":9,"nodeType":"198","messageId":"199","endLine":2,"endColumn":16},{"ruleId":"196","severity":1,"message":"225","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":9},{"ruleId":"196","severity":1,"message":"209","line":4,"column":9,"nodeType":"198","messageId":"199","endLine":4,"endColumn":20},{"ruleId":"196","severity":1,"message":"211","line":5,"column":9,"nodeType":"198","messageId":"199","endLine":5,"endColumn":19},{"ruleId":"196","severity":1,"message":"203","line":5,"column":21,"nodeType":"198","messageId":"199","endLine":5,"endColumn":30},{"ruleId":"196","severity":1,"message":"226","line":27,"column":9,"nodeType":"198","messageId":"199","endLine":27,"endColumn":23},{"ruleId":"219","severity":1,"message":"220","line":6,"column":9,"nodeType":"221","endLine":6,"endColumn":52},{"ruleId":"196","severity":1,"message":"202","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"227","line":1,"column":16,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"225","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":9},{"ruleId":"196","severity":1,"message":"228","line":3,"column":9,"nodeType":"198","messageId":"199","endLine":3,"endColumn":13},{"ruleId":"196","severity":1,"message":"211","line":5,"column":9,"nodeType":"198","messageId":"199","endLine":5,"endColumn":19},{"ruleId":"196","severity":1,"message":"203","line":5,"column":21,"nodeType":"198","messageId":"199","endLine":5,"endColumn":30},{"ruleId":"196","severity":1,"message":"210","line":9,"column":9,"nodeType":"198","messageId":"199","endLine":9,"endColumn":16},{"ruleId":"196","severity":1,"message":"229","line":11,"column":9,"nodeType":"198","messageId":"199","endLine":11,"endColumn":22},{"ruleId":"196","severity":1,"message":"230","line":11,"column":24,"nodeType":"198","messageId":"199","endLine":11,"endColumn":46},{"ruleId":"196","severity":1,"message":"231","line":16,"column":6,"nodeType":"198","messageId":"199","endLine":16,"endColumn":26},{"ruleId":"219","severity":1,"message":"220","line":15,"column":13,"nodeType":"221","endLine":15,"endColumn":122},{"ruleId":"219","severity":1,"message":"220","line":18,"column":13,"nodeType":"221","endLine":18,"endColumn":39},{"ruleId":"196","severity":1,"message":"224","line":2,"column":9,"nodeType":"198","messageId":"199","endLine":2,"endColumn":16},{"ruleId":"196","severity":1,"message":"211","line":5,"column":9,"nodeType":"198","messageId":"199","endLine":5,"endColumn":19},{"ruleId":"196","severity":1,"message":"203","line":5,"column":21,"nodeType":"198","messageId":"199","endLine":5,"endColumn":30},{"ruleId":"196","severity":1,"message":"229","line":6,"column":9,"nodeType":"198","messageId":"199","endLine":6,"endColumn":22},{"ruleId":"196","severity":1,"message":"230","line":6,"column":24,"nodeType":"198","messageId":"199","endLine":6,"endColumn":46},{"ruleId":"196","severity":1,"message":"227","line":1,"column":16,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"232","line":4,"column":9,"nodeType":"198","messageId":"199","endLine":4,"endColumn":18},{"ruleId":"196","severity":1,"message":"233","line":4,"column":20,"nodeType":"198","messageId":"199","endLine":4,"endColumn":39},{"ruleId":"196","severity":1,"message":"211","line":5,"column":9,"nodeType":"198","messageId":"199","endLine":5,"endColumn":19},{"ruleId":"196","severity":1,"message":"203","line":5,"column":21,"nodeType":"198","messageId":"199","endLine":5,"endColumn":30},{"ruleId":"219","severity":1,"message":"220","line":12,"column":13,"nodeType":"221","endLine":12,"endColumn":57},{"ruleId":"196","severity":1,"message":"202","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"234","line":3,"column":9,"nodeType":"198","messageId":"199","endLine":3,"endColumn":17},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'Dialogs' is defined but never used.","'React' is defined but never used.","'stateType' is defined but never used.","'AppStateType' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'ChangeEvent' is defined but never used.","'Message' is defined but never used.","'ActionType' is defined but never used.","'StoreType' is defined but never used.","'MapDispatchToProps' is defined but never used.","'axios' is defined but never used.","'usersAPI' is defined but never used.","'setUserProfileAC' is defined but never used.","'setUserDate' is defined but never used.","'authAPI' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MyPosts' is defined but never used.","'ReactNode' is defined but never used.","'NavLink' is defined but never used.","'s' is defined but never used.","'newMessageBody' is assigned a value but never used.","'RefObject' is defined but never used.","'Post' is defined but never used.","'sendMessageAC' is defined but never used.","'updateNewMessageTextAC' is defined but never used.","'MyPostsContainerType' is defined but never used.","'addPostAC' is defined but never used.","'updateNewPostTextAC' is defined but never used.","'Dispatch' is defined but never used.","no-global-assign","no-unsafe-negation"]