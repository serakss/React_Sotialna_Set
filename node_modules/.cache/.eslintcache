[{"D:\\js\\React_Sotialna_Set\\src\\index.tsx":"1","D:\\js\\React_Sotialna_Set\\src\\redux\\redux-store.ts":"2","D:\\js\\React_Sotialna_Set\\src\\App.tsx":"3","D:\\js\\React_Sotialna_Set\\src\\redux\\dialogs-reducer.tsx":"4","D:\\js\\React_Sotialna_Set\\src\\redux\\profile-reducer.tsx":"5","D:\\js\\React_Sotialna_Set\\src\\redux\\auth-reducer.tsx":"6","D:\\js\\React_Sotialna_Set\\src\\redux\\users-reducer.tsx":"7","D:\\js\\React_Sotialna_Set\\src\\components\\Navbar\\Navbar.tsx":"8","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Dialogs.tsx":"9","D:\\js\\React_Sotialna_Set\\src\\components\\Users\\UsersContainer.tsx":"10","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileContainer.tsx":"11","D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\HederContainer.tsx":"12","D:\\js\\React_Sotialna_Set\\src\\components\\Users\\Users.tsx":"13","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\Profile.tsx":"14","D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\Heder.tsx":"15","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"16","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\MessageContainer.tsx":"17","D:\\js\\React_Sotialna_Set\\src\\components\\common\\Preloader\\Preloader.tsx":"18","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"19","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"20","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\Message.tsx":"21","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"22","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"23","D:\\js\\React_Sotialna_Set\\src\\api\\api.ts":"24"},{"size":879,"mtime":1648381726000,"results":"25","hashOfConfig":"26"},{"size":672,"mtime":1649869966888,"results":"27","hashOfConfig":"26"},{"size":1713,"mtime":1648381726000,"results":"28","hashOfConfig":"26"},{"size":1341,"mtime":1648381726000,"results":"29","hashOfConfig":"26"},{"size":1565,"mtime":1648381726000,"results":"30","hashOfConfig":"26"},{"size":924,"mtime":1648381726000,"results":"31","hashOfConfig":"26"},{"size":5188,"mtime":1649881461932,"results":"32","hashOfConfig":"26"},{"size":942,"mtime":1648381726000,"results":"33","hashOfConfig":"26"},{"size":689,"mtime":1648381726000,"results":"34","hashOfConfig":"26"},{"size":5590,"mtime":1649881502807,"results":"35","hashOfConfig":"26"},{"size":1653,"mtime":1649866903181,"results":"36","hashOfConfig":"26"},{"size":1353,"mtime":1649866788125,"results":"37","hashOfConfig":"26"},{"size":3516,"mtime":1649881461909,"results":"38","hashOfConfig":"26"},{"size":656,"mtime":1648381726000,"results":"39","hashOfConfig":"26"},{"size":553,"mtime":1649866825234,"results":"40","hashOfConfig":"26"},{"size":1306,"mtime":1648381726000,"results":"41","hashOfConfig":"26"},{"size":1751,"mtime":1648381726000,"results":"42","hashOfConfig":"26"},{"size":141,"mtime":1648381726000,"results":"43","hashOfConfig":"26"},{"size":2067,"mtime":1648381726000,"results":"44","hashOfConfig":"26"},{"size":563,"mtime":1648381726000,"results":"45","hashOfConfig":"26"},{"size":1506,"mtime":1648381726000,"results":"46","hashOfConfig":"26"},{"size":2073,"mtime":1648381726000,"results":"47","hashOfConfig":"26"},{"size":421,"mtime":1648381726000,"results":"48","hashOfConfig":"26"},{"size":752,"mtime":1649878473762,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"3qnupp",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"52"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\js\\React_Sotialna_Set\\src\\index.tsx",[],["113","114"],"D:\\js\\React_Sotialna_Set\\src\\redux\\redux-store.ts",[],"D:\\js\\React_Sotialna_Set\\src\\App.tsx",["115","116"],"import React from 'react';\nimport './App.module.css';\nimport {Header} from \"./components/Heder/Heder\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport s from \"./App.module.css\"\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport { Route} from \"react-router-dom\";\n\nimport { StoreType} from \"./redux/redux-store\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\nimport {ProfileConnect} from \"./components/Profile/ProfileContainer\";\nimport {HeaderContainer} from \"./components/Heder/HederContainer\";\n\ntype appType = {\n    store: StoreType\n    //dispatch: (action: ActionType) => void\n}\n\nconst App: React.FC<appType> = (props) => {\n    return (\n\n            <div className={s.appWrapper}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={s.appWrapperContent}>\n                    {/*<Route path=\"/dialogs\" component={Dialogs}/>\n                <Route path=\"/profile\" component={Profile}/>*/}\n                    <Route path=\"/dialogs\" render={() => <Dialogs\n                        store={props.store}\n                        state={props.store.getState()}\n                        dispatch={props.store.dispatch}\n                    />}/>\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileConnect/>}/>\n                    <Route path=\"/users\" render={() =><UsersContainer/>}/>\n                    {/* <Route path=\"/news\" />\n                <Route path=\"/music\" />\n                <Route path=\"/settings\" />*/}\n                    {/*<Profile/>*/}\n                    {/*<Dialogs/>*/}\n\n                </div>\n            </div>\n    );\n}\n\n\nexport default App;\n","D:\\js\\React_Sotialna_Set\\src\\redux\\dialogs-reducer.tsx",["117","118","119"],"import React from \"react\"\nimport {ActionType, stateType} from \"./store\";\nimport {AppStateType} from \"./redux-store\";\n\n\nlet initialState = {\n    messages: [\n        {id: \"1\", message: \"Hi\"},\n        {id: \"2\", message: \"How is you it?\"},\n        {id: \"3\", message: \"Yo\"},\n        {id: \"4\", message: \"ccccc\"},\n        {id: \"5\", message: \"tttttt\"},\n        {id: \"6\", message: \"yyyyyyy\"},\n    ],\n    dialogs: [\n        {id: \"1\", name: \"Dymych\"},\n        {id: \"2\", name: \"Andrey\"},\n        {id: \"3\", name: \"Sveta\"},\n        {id: \"4\", name: \"Sasha\"},\n        {id: \"5\", name: \"Viktor\"},\n        {id: \"6\", name: \"Valera\"},\n    ],\n    newMessageBody: \"\"\n}\n\n\nexport const dialogsReducer = (state = initialState, action: ActionType) => {\n\n\n    switch (action.type) {\n        case \"UPDATE-NEW-MESSAGE-TEXT\": {\n            return {...state, newMessageBody: action.body};\n        }\n        case \"SEND-MESSAGE\": {\n            return {\n                ...state,\n                newMessageBody: \"\",\n                messages: [...state.messages, {id: \"1\", message: state.newMessageBody}]\n            };\n        }\n        default:\n            return state\n    }\n}\n\nexport const addPostAC = () => {\n    return {type: \"ADD-POST\"} as const\n\n}\n\nexport const updateNewPostTextAC = (newText: string) => {\n    return {type: \"UPDATE-NEW-POST-TEX\", newText} as const\n}\n\n","D:\\js\\React_Sotialna_Set\\src\\redux\\profile-reducer.tsx",["120","121"],"import React from \"react\";\nimport {ActionType, stateType} from \"./store\";\n\nlet initialState = {\n    postData: [\n        {id: \"1\", message: \"Hi, how are you?\", likesCount: 12},\n        {id: \"2\", message: \"It's my first post\", likesCount: 5},\n        {id: \"3\", message: \"aaaaaaaaaaaaaaa\", likesCount: 5},\n    ],\n    newPostText: \"\",\n    profile: null,\n}\n\nexport const profileReducer = (state = initialState, action: ActionType) => {\n\n    switch (action.type) {\n        case \"ADD-POST\": {\n            /* let newPost = {id: \"1\", message: state.newPostText, likesCount: 12};\n             let stateCopy = {...state};\n             stateCopy.postData = [...state.postData];\n             stateCopy.postData.push(newPost);\n             stateCopy.newPostText = \"\";\n             return stateCopy*/\n            return {\n                ...state,\n                newPostText: \"\",\n                postData: [...state.postData,{id: \"1\", message: state.newPostText, likesCount: 12}]\n            }\n\n        }\n        case \"UPDATE-NEW-POST-TEX\": {\n\n            return {...state,newPostText: action.newText}\n        }\n        case \"SET_USER_PROFILE\":{\n            return {...state,profile:action.profile.photos.large}\n        }\n        default:\n            return state\n    }\n}\n\n\nexport const updateNewMessageTextAC = (body: string) => {\n    return {type: \"UPDATE-NEW-MESSAGE-TEXT\", body} as const\n}\nexport const sendMessageAC = () => {\n    return {type: \"SEND-MESSAGE\"} as const\n}\n\nexport const setUserProfileAC =(profile:any)=>{\n    return{type:\"SET_USER_PROFILE\",profile} as const\n}","D:\\js\\React_Sotialna_Set\\src\\redux\\auth-reducer.tsx",["122"],"import React from \"react\";\n\n\nconst SET_USER_DATA = \"SET_USER_DATA\";\n\n\ntype setUserDateType = ReturnType<typeof setUserDate>\n\ntype actionType = setUserDateType;\n\nexport type InitialStateType = {\n    id: number\n    email: string\n    login: string\n    isAuth: boolean\n}\n\n\nlet initialState: InitialStateType = {\n    id: 0,\n    email: \"\",\n    login: \"\",\n    isAuth: false\n}\n\n\nexport const authReducer = (state = initialState, action: actionType): InitialStateType => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                login:action.data.login,\n                email:action.data.email,\n                id:action.data.id,\n                isAuth:true\n\n            }\n        default:\n            return state\n    }\n}\n\nexport const setUserDate = (email: string,id: number,  login: string) => ({\n    type: SET_USER_DATA,\n    data: { email,id, login} as const\n})\n\n\n\n\n\n","D:\\js\\React_Sotialna_Set\\src\\redux\\users-reducer.tsx",["123","124"],"D:\\js\\React_Sotialna_Set\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Dialogs.tsx",["125","126","127"],"import React, {ChangeEvent} from \"react\";\nimport s from \"./Dialogs.module.css\"\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\nimport {ActionType, stateType} from \"../../redux/store\";\nimport {AppStateType, StoreType} from \"../../redux/redux-store\";\nimport { SuperMessageContainer} from \"./Message/MessageContainer\";\n\ntype dialogsType ={\n    state: AppStateType\n    dispatch: (action: ActionType) => void\n    store: StoreType\n}\n\nexport const Dialogs: React.FC<dialogsType> = (props) => {\n\n\n    return (\n        <div className={s.dialogs}>\n            <DialogItem state={props.state}/>\n           <SuperMessageContainer/>\n        </div>\n    )\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Users\\UsersContainer.tsx",["128","129","130"],"D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileContainer.tsx",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\HederContainer.tsx",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Users\\Users.tsx",["131","132","133"],"D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\Profile.tsx",["134","135","136","137","138"],"import React from \"react\";\nimport {MyPosts} from \"./MyPosts/MyPosts\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport s from \"./Profile.module.css\"\nimport {ActionType, stateType} from \"../../redux/store\";\nimport {AppStateType, StoreType} from \"../../redux/redux-store\";\nimport {SuperMyPostsContainer} from \"./MyPosts/MyPostsContainer\";\n\ntype profileType={\nprofile:any\n}\n\nexport const Profile: React.FC<profileType> = (props) => {\n\n    return (\n        <div className={s.content}>\n            <ProfileInfo profile={props.profile}/>\n           <SuperMyPostsContainer/>\n           {/* <MyPostsContainer store={props.store}/>*/}\n        </div>)\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\Heder.tsx",["139","140"],"D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",["141"],"import React from \"react\";\nimport s from \"./../Dialogs.module.css\"\nimport {NavLink} from \"react-router-dom\";\nimport {stateType} from \"../../../redux/store\";\nimport {AppStateType} from \"../../../redux/redux-store\";\n\ntype dialogsItemType ={\n    state:AppStateType\n}\n\nexport const DialogItem: React.FC<dialogsItemType> = (props) => {\n\n    /*let dialogs = [\n        {id: \"1\", name: \"Dymych\"},\n        {id: \"2\", name: \"Andrey\"},\n        {id: \"3\", name: \"Sveta\"},\n        {id: \"4\", name: \"Sasha\"},\n        {id: \"5\", name: \"Viktor\"},\n        {id: \"6\", name: \"Valera\"},\n    ]*/\n    return (\n            <div className={s.dialogsItems}>\n                {props.state.dialogsState.dialogs.map(d => <div className={s.dialogs + ' ' + s.active}>\n                    <NavLink to={\"/dialogs/\" + d.id}>{d.name}</NavLink>\n                </div>)}\n                {/*    <DialogItem name={dialogs[0].name} id={dialogs[0].id} />\n                <DialogItem name={dialogs[1].name} id={dialogs[1].id} />\n                <DialogItem name={dialogs[2].name} id={dialogs[2].id} />\n                <DialogItem name={dialogs[3].name} id={dialogs[3].id} />\n                <DialogItem name={dialogs[4].name} id={dialogs[4].id} />\n                <DialogItem name={dialogs[5].name} id={dialogs[5].id} />*/}\n\n            </div>\n    )\n}\n\n","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\MessageContainer.tsx",["142","143","144","145","146","147"],"import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\"\nimport {ChangeEvent} from \"react\";\nimport {ActionType, stateType} from \"../../../redux/store\";\nimport {sendMessageAC, updateNewMessageTextAC} from \"../../../redux/profile-reducer\";\nimport {AppStateType, StoreType} from \"../../../redux/redux-store\";\nimport {Message} from \"./Message\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\n\n\ntype messageContainerType = {\n    store: StoreType\n}\n\nexport  const MessageContainer: React.FC<messageContainerType> = (props) => {\n\n    /*let messages = [\n        {id: \"1\", message: \"Hi\"},\n        {id: \"2\", message: \"How is you it?\"},\n        {id: \"3\", message: \"Yo\"},\n        {id: \"4\", message: \"ccccc\"},\n        {id: \"5\", message: \"tttttt\"},\n        {id: \"6\", message: \"yyyyyyy\"},\n    ]*/\n    let newMessageBody = props.store.getState().dialogsState.newMessageBody;\n\n    let onNewMessageChange = (body: string) => {\n        props.store.dispatch(updateNewMessageTextAC(body))\n    }\n\n    let onSendMessageClick = () => {\n        props.store.dispatch(sendMessageAC())\n    }\n    return (\n        <Message state={props.store.getState()}  onNewMessageChange={onNewMessageChange}\n                 onSendMessageClick={onSendMessageClick}/>\n    )\n}\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        state: state\n    }\n}\n\n\nlet mapDispatchToProps = (dispatch:Dispatch) => {\n    return {\n        onNewMessageChange:(body:string)=>{\n            dispatch(updateNewMessageTextAC(body))\n        },\n        onSendMessageClick:()=>{\n            dispatch(sendMessageAC())\n        }\n    }\n}\n\nexport const SuperMessageContainer = connect(mapStateToProps, mapDispatchToProps)(Message);","D:\\js\\React_Sotialna_Set\\src\\components\\common\\Preloader\\Preloader.tsx",["148"],"import React from \"react\";\n\n\nexport let Preloader = () => {\n    return <div>\n        <img src={\"https://i.gifer.com/g0R5.gif\"}/>\n    </div>\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["149","150","151","152","153","154","155","156","157","158"],"import React, {RefObject} from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport {Post} from \"./Post/Post\";\nimport {addPostAC, updateNewPostTextAC} from \"../../../redux/dialogs-reducer\";\nimport {ActionType, stateType} from \"../../../redux/store\";\nimport {AppStateType, StoreType} from \"../../../redux/redux-store\";\n\nimport {connect} from \"react-redux\";\nimport {Message} from \"../../Dialogs/Message/Message\";\nimport {Dispatch} from \"redux\";\nimport {sendMessageAC, updateNewMessageTextAC} from \"../../../redux/profile-reducer\";\nimport {MyPosts} from \"./MyPosts\";\n\n\n\ntype MyPostsContainerType = {\n    store:StoreType\n}\n\n/*export const MyPostsContainer: React.FC<MyPostsContainerType> = (props) => {\n\n    /!*let postData = [\n        {id: \"1\", message: \"Hi, how are you?\", likesCount: 12},\n        {id: \"2\", message: \"It's my first post\", likesCount: 5},\n        {id: \"3\", message: \"aaaaaaaaaaaaaaa\", likesCount: 5},\n\n    ]\n\n*!/\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\n\n    let onAddPost = () => {\n        // props.addPost()\n        props.store.dispatch(addPostAC())\n\n    }\n    let onPostChange = (text:string) => {\n        //let text = newPostElement.current? newPostElement.current.value: \"\"\n        props.store.dispatch(updateNewPostTextAC(text))\n        /!*props.dispatch({type: \"UPDATE-NEW-POST-TEX\", newText: newPostElement.current? newPostElement.current.value: \"\"})*!/\n        /!*if (newPostElement.current) {\n            props.updateNewPostText(newPostElement.current.value)\n        }*!/\n    }\n\n    return (<MyPosts updateNewPostText={onPostChange} addPost ={onAddPost} posts={props.store.getState()}/> )\n}*/\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        posts: state\n    }\n}\n\n\nlet mapDispatchToProps = (dispatch:Dispatch) => {\n    return {\n        updateNewPostText:(text:string)=>{\n            dispatch(updateNewPostTextAC(text))\n        },\n        addPost:()=>{\n            dispatch(addPostAC())\n        }\n    }\n}\n\nexport const SuperMyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["159","160"],"import s from \"./ProfileInfo.module.css\"\nimport {Preloader} from \"../../common/Preloader/Preloader\";\ntype ProfileInfoType={\n    profile:any\n}\n\n\nexport const ProfileInfo = (props:ProfileInfoType) => {\n  if(!props.profile){\n      return  <Preloader/>\n  }\n\n    return <div>\n        <div>\n            <img src=\"https://img.gazeta.ru/files3/845/7947845/upload-shutterstock_117062077-pic905v-895x505-99863.jpg\"/>\n        </div>\n        <div className={s.descriptionBlock}>\n            <img src={props.profile}/>\n            ava + description\n        </div>\n    </div>\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\Message.tsx",["161","162","163","164","165"],"import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\"\nimport {ChangeEvent} from \"react\";\nimport {ActionType, stateType} from \"../../../redux/store\";\nimport {sendMessageAC, updateNewMessageTextAC} from \"../../../redux/profile-reducer\";\nimport {AppStateType} from \"../../../redux/redux-store\";\n\n\ntype messageType = {\n    state:AppStateType\n    onNewMessageChange:(body:string)=>void\n    onSendMessageClick:()=>void\n}\n\nexport const Message: React.FC<messageType> = (props) => {\n\n    let newMessageBody=props.state.dialogsState.newMessageBody\n\n    let onNewMessageChange = (e:ChangeEvent<HTMLTextAreaElement>) => {\n        let body = e.target.value;\n     props.onNewMessageChange(body)\n    }\n\n    let onSendMessageClick = () => {\n        props.onSendMessageClick();\n    }\n\n    return (\n        <div className={s.messages}>\n            <div> {props.state.dialogsState.messages.map(m => <div className={s.messages}>{m.message}</div>)}</div>\n            {/* <Message message={messages[0].message}/>\n               <Message message={messages[1].message}/>\n               <Message message={messages[2].message}/>*/}\n            <div>\n                <div><textarea placeholder=\"Enter your message\" value={newMessageBody}\n                               onChange={onNewMessageChange}></textarea></div>\n                <div>\n                    <button onClick={onSendMessageClick}>send</button>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\n","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["166","167","168","169","170"],"import React, {RefObject} from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport {Post} from \"./Post/Post\";\nimport {addPostAC, updateNewPostTextAC} from \"../../../redux/dialogs-reducer\";\nimport {ActionType, stateType} from \"../../../redux/store\";\nimport {AppStateType} from \"../../../redux/redux-store\";\n\n\n\ntype myPostsType = {\n    updateNewPostText:(text:string)=>void\n    addPost:()=>void\n    posts:AppStateType\n}\n\nexport const MyPosts: React.FC<myPostsType> = (props) => {\n\n    /*let postData = [\n        {id: \"1\", message: \"Hi, how are you?\", likesCount: 12},\n        {id: \"2\", message: \"It's my first post\", likesCount: 5},\n        {id: \"3\", message: \"aaaaaaaaaaaaaaa\", likesCount: 5},\n\n    ]\n\n*/\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\n\n    let addPost = () => {\n         props.addPost()\n        //props.dispatch(addPostAC())\n\n    }\n    let onPostChange = () => {\n      // let text = newPostElement.current? newPostElement.current.value: \"\"\n       // props.dispatch(updateNewPostTextAC(text))\n        /*props.dispatch({type: \"UPDATE-NEW-POST-TEX\", newText: newPostElement.current? newPostElement.current.value: \"\"})*/\n        if (newPostElement.current) {\n            props.updateNewPostText(newPostElement.current.value)\n        }\n\n    }\n\n\n    return (\n\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <div>\n                    <textarea ref={newPostElement} value={props.posts.profileState.newPostText} onChange={onPostChange}/>\n                </div>\n                <div>\n                    <button onClick={addPost}>Add post</button>\n                </div>\n                <div className={s.posts}>\n\n                    {props.posts.profileState.postData.map(p => <Post message={p.message} likeCount={p.likesCount}/>)}\n\n                    {/* <Post message={postData[0].message} likeCount={postData[0].likesCount}/>\n                    <Post message={postData[1].message} likeCount={postData[1].likesCount}/>*/}\n                </div>\n            </div>\n        </div>\n    )\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["171"],"import React from \"react\";\nimport s from \"./Post.module.css\";\n\ntype PostType = {\n    message: string,\n    likeCount: number\n}\n\nexport const Post: React.FC<PostType> = (props) => {\n    return (\n        <div className={s.item}>\n            <img src=\"https://i.imgur.com/gqJvKwW.png\"/>\n            {props.message}\n            <div>\n                <span>like</span>{props.likeCount}\n            </div>\n        </div>\n    )\n}","D:\\js\\React_Sotialna_Set\\src\\api\\api.ts",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":3,"column":9,"nodeType":"178","messageId":"179","endLine":3,"endColumn":15},{"ruleId":"176","severity":1,"message":"180","line":6,"column":9,"nodeType":"178","messageId":"179","endLine":6,"endColumn":16},{"ruleId":"176","severity":1,"message":"181","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"182","line":2,"column":21,"nodeType":"178","messageId":"179","endLine":2,"endColumn":30},{"ruleId":"176","severity":1,"message":"183","line":3,"column":9,"nodeType":"178","messageId":"179","endLine":3,"endColumn":21},{"ruleId":"176","severity":1,"message":"181","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"182","line":2,"column":21,"nodeType":"178","messageId":"179","endLine":2,"endColumn":30},{"ruleId":"176","severity":1,"message":"181","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"181","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"184","severity":1,"message":"185","line":125,"column":65,"nodeType":"186","messageId":"187","endLine":125,"endColumn":67},{"ruleId":"176","severity":1,"message":"188","line":1,"column":16,"nodeType":"178","messageId":"179","endLine":1,"endColumn":27},{"ruleId":"176","severity":1,"message":"189","line":4,"column":9,"nodeType":"178","messageId":"179","endLine":4,"endColumn":16},{"ruleId":"176","severity":1,"message":"182","line":5,"column":21,"nodeType":"178","messageId":"179","endLine":5,"endColumn":30},{"ruleId":"176","severity":1,"message":"190","line":2,"column":18,"nodeType":"178","messageId":"179","endLine":2,"endColumn":36},{"ruleId":"176","severity":1,"message":"191","line":17,"column":8,"nodeType":"178","messageId":"179","endLine":17,"endColumn":13},{"ruleId":"176","severity":1,"message":"192","line":19,"column":9,"nodeType":"178","messageId":"179","endLine":19,"endColumn":17},{"ruleId":"176","severity":1,"message":"191","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":13},{"ruleId":"176","severity":1,"message":"192","line":6,"column":9,"nodeType":"178","messageId":"179","endLine":6,"endColumn":17},{"ruleId":"193","severity":1,"message":"194","line":40,"column":25,"nodeType":"195","endLine":42,"endColumn":55},{"ruleId":"176","severity":1,"message":"196","line":2,"column":9,"nodeType":"178","messageId":"179","endLine":2,"endColumn":16},{"ruleId":"176","severity":1,"message":"197","line":5,"column":9,"nodeType":"178","messageId":"179","endLine":5,"endColumn":19},{"ruleId":"176","severity":1,"message":"182","line":5,"column":21,"nodeType":"178","messageId":"179","endLine":5,"endColumn":30},{"ruleId":"176","severity":1,"message":"183","line":6,"column":9,"nodeType":"178","messageId":"179","endLine":6,"endColumn":21},{"ruleId":"176","severity":1,"message":"198","line":6,"column":23,"nodeType":"178","messageId":"179","endLine":6,"endColumn":32},{"ruleId":"176","severity":1,"message":"199","line":1,"column":16,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":12,"column":13,"nodeType":"195","endLine":12,"endColumn":105},{"ruleId":"176","severity":1,"message":"182","line":4,"column":9,"nodeType":"178","messageId":"179","endLine":4,"endColumn":18},{"ruleId":"176","severity":1,"message":"200","line":2,"column":9,"nodeType":"178","messageId":"179","endLine":2,"endColumn":16},{"ruleId":"176","severity":1,"message":"201","line":3,"column":8,"nodeType":"178","messageId":"179","endLine":3,"endColumn":9},{"ruleId":"176","severity":1,"message":"188","line":4,"column":9,"nodeType":"178","messageId":"179","endLine":4,"endColumn":20},{"ruleId":"176","severity":1,"message":"197","line":5,"column":9,"nodeType":"178","messageId":"179","endLine":5,"endColumn":19},{"ruleId":"176","severity":1,"message":"182","line":5,"column":21,"nodeType":"178","messageId":"179","endLine":5,"endColumn":30},{"ruleId":"176","severity":1,"message":"202","line":27,"column":9,"nodeType":"178","messageId":"179","endLine":27,"endColumn":23},{"ruleId":"193","severity":1,"message":"194","line":6,"column":9,"nodeType":"195","endLine":6,"endColumn":52},{"ruleId":"176","severity":1,"message":"181","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"203","line":1,"column":16,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"201","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":9},{"ruleId":"176","severity":1,"message":"204","line":3,"column":9,"nodeType":"178","messageId":"179","endLine":3,"endColumn":13},{"ruleId":"176","severity":1,"message":"197","line":5,"column":9,"nodeType":"178","messageId":"179","endLine":5,"endColumn":19},{"ruleId":"176","severity":1,"message":"182","line":5,"column":21,"nodeType":"178","messageId":"179","endLine":5,"endColumn":30},{"ruleId":"176","severity":1,"message":"189","line":9,"column":9,"nodeType":"178","messageId":"179","endLine":9,"endColumn":16},{"ruleId":"176","severity":1,"message":"205","line":11,"column":9,"nodeType":"178","messageId":"179","endLine":11,"endColumn":22},{"ruleId":"176","severity":1,"message":"206","line":11,"column":24,"nodeType":"178","messageId":"179","endLine":11,"endColumn":46},{"ruleId":"176","severity":1,"message":"207","line":16,"column":6,"nodeType":"178","messageId":"179","endLine":16,"endColumn":26},{"ruleId":"193","severity":1,"message":"194","line":15,"column":13,"nodeType":"195","endLine":15,"endColumn":122},{"ruleId":"193","severity":1,"message":"194","line":18,"column":13,"nodeType":"195","endLine":18,"endColumn":39},{"ruleId":"176","severity":1,"message":"200","line":2,"column":9,"nodeType":"178","messageId":"179","endLine":2,"endColumn":16},{"ruleId":"176","severity":1,"message":"197","line":5,"column":9,"nodeType":"178","messageId":"179","endLine":5,"endColumn":19},{"ruleId":"176","severity":1,"message":"182","line":5,"column":21,"nodeType":"178","messageId":"179","endLine":5,"endColumn":30},{"ruleId":"176","severity":1,"message":"205","line":6,"column":9,"nodeType":"178","messageId":"179","endLine":6,"endColumn":22},{"ruleId":"176","severity":1,"message":"206","line":6,"column":24,"nodeType":"178","messageId":"179","endLine":6,"endColumn":46},{"ruleId":"176","severity":1,"message":"203","line":1,"column":16,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"208","line":4,"column":9,"nodeType":"178","messageId":"179","endLine":4,"endColumn":18},{"ruleId":"176","severity":1,"message":"209","line":4,"column":20,"nodeType":"178","messageId":"179","endLine":4,"endColumn":39},{"ruleId":"176","severity":1,"message":"197","line":5,"column":9,"nodeType":"178","messageId":"179","endLine":5,"endColumn":19},{"ruleId":"176","severity":1,"message":"182","line":5,"column":21,"nodeType":"178","messageId":"179","endLine":5,"endColumn":30},{"ruleId":"193","severity":1,"message":"194","line":12,"column":13,"nodeType":"195","endLine":12,"endColumn":57},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'React' is defined but never used.","'stateType' is defined but never used.","'AppStateType' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'ChangeEvent' is defined but never used.","'Message' is defined but never used.","'MapDispatchToProps' is defined but never used.","'axios' is defined but never used.","'usersAPI' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MyPosts' is defined but never used.","'ActionType' is defined but never used.","'StoreType' is defined but never used.","'ReactNode' is defined but never used.","'NavLink' is defined but never used.","'s' is defined but never used.","'newMessageBody' is assigned a value but never used.","'RefObject' is defined but never used.","'Post' is defined but never used.","'sendMessageAC' is defined but never used.","'updateNewMessageTextAC' is defined but never used.","'MyPostsContainerType' is defined but never used.","'addPostAC' is defined but never used.","'updateNewPostTextAC' is defined but never used.","no-global-assign","no-unsafe-negation"]