[{"D:\\js\\React_Sotialna_Set\\src\\index.tsx":"1","D:\\js\\React_Sotialna_Set\\src\\redux\\redux-store.ts":"2","D:\\js\\React_Sotialna_Set\\src\\App.tsx":"3","D:\\js\\React_Sotialna_Set\\src\\redux\\dialogs-reducer.tsx":"4","D:\\js\\React_Sotialna_Set\\src\\redux\\profile-reducer.tsx":"5","D:\\js\\React_Sotialna_Set\\src\\redux\\auth-reducer.tsx":"6","D:\\js\\React_Sotialna_Set\\src\\redux\\users-reducer.tsx":"7","D:\\js\\React_Sotialna_Set\\src\\components\\Navbar\\Navbar.tsx":"8","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Dialogs.tsx":"9","D:\\js\\React_Sotialna_Set\\src\\components\\Users\\UsersContainer.tsx":"10","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileContainer.tsx":"11","D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\HederContainer.tsx":"12","D:\\js\\React_Sotialna_Set\\src\\components\\Users\\Users.tsx":"13","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\Profile.tsx":"14","D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\Heder.tsx":"15","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"16","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\MessageContainer.tsx":"17","D:\\js\\React_Sotialna_Set\\src\\components\\common\\Preloader\\Preloader.tsx":"18","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"19","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"20","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\Message.tsx":"21","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"22","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"23","D:\\js\\React_Sotialna_Set\\src\\api\\api.ts":"24","D:\\js\\React_Sotialna_Set\\src\\components\\Login\\Login.tsx":"25","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialigsContainer.tsx":"26","D:\\js\\React_Sotialna_Set\\src\\hoc\\withAuthRedirect.tsx":"27","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"28","D:\\js\\React_Sotialna_Set\\src\\utils\\validators\\validators.ts":"29","D:\\js\\React_Sotialna_Set\\src\\components\\common\\Preloader\\FormsControls\\FormsControls.tsx":"30"},{"size":879,"mtime":1648381726000,"results":"31","hashOfConfig":"32"},{"size":745,"mtime":1651406768245,"results":"33","hashOfConfig":"32"},{"size":1735,"mtime":1649967361196,"results":"34","hashOfConfig":"32"},{"size":1371,"mtime":1653422198687,"results":"35","hashOfConfig":"32"},{"size":2475,"mtime":1653422806198,"results":"36","hashOfConfig":"32"},{"size":2220,"mtime":1653493494047,"results":"37","hashOfConfig":"32"},{"size":5176,"mtime":1649933858703,"results":"38","hashOfConfig":"32"},{"size":942,"mtime":1648381726000,"results":"39","hashOfConfig":"32"},{"size":735,"mtime":1651332018038,"results":"40","hashOfConfig":"32"},{"size":5824,"mtime":1651336234545,"results":"41","hashOfConfig":"32"},{"size":2757,"mtime":1653494298332,"results":"42","hashOfConfig":"32"},{"size":1471,"mtime":1653490358632,"results":"43","hashOfConfig":"32"},{"size":7568,"mtime":1653495200370,"results":"44","hashOfConfig":"32"},{"size":778,"mtime":1651397768231,"results":"45","hashOfConfig":"32"},{"size":614,"mtime":1653490358625,"results":"46","hashOfConfig":"32"},{"size":1306,"mtime":1648381726000,"results":"47","hashOfConfig":"32"},{"size":1784,"mtime":1653420930224,"results":"48","hashOfConfig":"32"},{"size":141,"mtime":1648381726000,"results":"49","hashOfConfig":"32"},{"size":2096,"mtime":1653422198662,"results":"50","hashOfConfig":"32"},{"size":733,"mtime":1653495425657,"results":"51","hashOfConfig":"32"},{"size":2417,"mtime":1653470273981,"results":"52","hashOfConfig":"32"},{"size":2992,"mtime":1653467882726,"results":"53","hashOfConfig":"32"},{"size":421,"mtime":1648381726000,"results":"54","hashOfConfig":"32"},{"size":1405,"mtime":1653484684765,"results":"55","hashOfConfig":"32"},{"size":2076,"mtime":1653493039319,"results":"56","hashOfConfig":"32"},{"size":781,"mtime":1651335996933,"results":"57","hashOfConfig":"32"},{"size":777,"mtime":1651335238599,"results":"58","hashOfConfig":"32"},{"size":935,"mtime":1651502379659,"results":"59","hashOfConfig":"32"},{"size":447,"mtime":1653467277827,"results":"60","hashOfConfig":"32"},{"size":787,"mtime":1653470616200,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"3qnupp",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\js\\React_Sotialna_Set\\src\\index.tsx",[],["136","137"],"D:\\js\\React_Sotialna_Set\\src\\redux\\redux-store.ts",[],"D:\\js\\React_Sotialna_Set\\src\\App.tsx",["138","139","140"],"import React from 'react';\nimport './App.module.css';\nimport {Header} from \"./components/Heder/Heder\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport s from \"./App.module.css\"\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport { Route} from \"react-router-dom\";\n\nimport { StoreType} from \"./redux/redux-store\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\nimport {ProfileConnect} from \"./components/Profile/ProfileContainer\";\nimport {HeaderContainer} from \"./components/Heder/HederContainer\";\nimport { Login } from './components/Login/Login';\nimport { DialigsContainer } from './components/Dialogs/DialigsContainer';\n\ntype appType = {\n    store: StoreType\n    //dispatch: (action: ActionType) => void\n}\n\nconst App: React.FC<appType> = (props) => {\n    return (\n\n            <div className={s.appWrapper}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={s.appWrapperContent}>\n                    {/*<Route path=\"/dialogs\" component={Dialogs}/>\n                <Route path=\"/profile\" component={Profile}/>*/}\n                    <Route path=\"/dialogs\" render={() => <DialigsContainer/>}/>\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileConnect/>}/>\n                    <Route path=\"/users\" render={() =><UsersContainer/>}/>\n                    <Route path=\"/login\" render={()=><Login/>}/>\n                    {/* <Route path=\"/news\" />\n                <Route path=\"/music\" />\n                <Route path=\"/settings\" />*/}\n                    {/*<Profile/>*/}\n                    {/*<Dialogs/>*/}\n\n                </div>\n            </div>\n    );\n}\n\n\nexport default App;\n","D:\\js\\React_Sotialna_Set\\src\\redux\\dialogs-reducer.tsx",["141","142","143"],"import React from \"react\"\nimport {ActionType, stateType} from \"./store\";\nimport {AppStateType} from \"./redux-store\";\n\n\nlet initialState = {\n    messages: [\n        {id: \"1\", message: \"Hi\"},\n        {id: \"2\", message: \"How is you it?\"},\n        {id: \"3\", message: \"Yo\"},\n        {id: \"4\", message: \"ccccc\"},\n        {id: \"5\", message: \"tttttt\"},\n        {id: \"6\", message: \"yyyyyyy\"},\n    ],\n    dialogs: [\n        {id: \"1\", name: \"Dymych\"},\n        {id: \"2\", name: \"Andrey\"},\n        {id: \"3\", name: \"Sveta\"},\n        {id: \"4\", name: \"Sasha\"},\n        {id: \"5\", name: \"Viktor\"},\n        {id: \"6\", name: \"Valera\"},\n    ]\n   // newMessageBody: \"\"\n}\n\n\nexport const dialogsReducer = (state = initialState, action: ActionType) => {\n\n\n    switch (action.type) {\n        case \"UPDATE-NEW-MESSAGE-TEXT\": {\n            return {...state, newMessageBody: action.body};\n        }\n        case \"SEND-MESSAGE\": {\n            return {\n                ...state,\n               // newMessageBody: \"\",\n                messages: [...state.messages, {id: \"1\", message: action.newMessage}]\n            };\n        }\n        default:\n            return state\n    }\n}\n\nexport const addPostAC = (newTextPost:string) => {\n    return {type: \"ADD-POST\",newTextPost} as const\n\n}\n\nexport const updateNewPostTextAC = (newText: string) => {\n    return {type: \"UPDATE-NEW-POST-TEX\", newText} as const\n}\n\n","D:\\js\\React_Sotialna_Set\\src\\redux\\profile-reducer.tsx",["144","145"],"import React from \"react\";\nimport { Dispatch } from \"redux\";\nimport {profileAPI, usersAPI } from \"../api/api\";\nimport {ActionType, stateType} from \"./store\";\n\nlet initialState = {\n    postData: [\n        {id: \"1\", message: \"Hi, how are you?\", likesCount: 12},\n        {id: \"2\", message: \"It's my first post\", likesCount: 5},\n        {id: \"3\", message: \"aaaaaaaaaaaaaaa\", likesCount: 5},\n    ],\n   // newPostText: \"\",\n    profile: null,\n    status:\"\"\n}\n\nexport const profileReducer = (state = initialState, action: ActionType) => {\n\n    switch (action.type) {\n        case \"ADD-POST\": {\n            /* let newPost = {id: \"1\", message: state.newPostText, likesCount: 12};\n             let stateCopy = {...state};\n             stateCopy.postData = [...state.postData];\n             stateCopy.postData.push(newPost);\n             stateCopy.newPostText = \"\";\n             return stateCopy*/\n            return {\n                ...state,\n               // newPostText: \"\",\n                postData: [...state.postData,{id: \"1\", message: action.newTextPost, likesCount: 12}]\n            }\n\n        }\n        case \"UPDATE-NEW-POST-TEX\": {\n\n            return {...state,newPostText: action.newText}\n        }\n        case \"SET_USER_PROFILE\":{\n            return {...state,profile:action.profile.photos.large}\n        }\n        case \"SET_STATUS\":{\n            return {...state,status: action.status}\n        }\n        default:\n            return state\n    }\n}\n\n\nexport const updateNewMessageTextAC = (body: string) => {\n    return {type: \"UPDATE-NEW-MESSAGE-TEXT\", body} as const\n}\nexport const sendMessageAC = (newMessage:string) => {\n    return {type: \"SEND-MESSAGE\", newMessage} as const\n}\n\nexport const setUserProfileAC =(profile:any)=>{\n    return{type:\"SET_USER_PROFILE\",profile} as const\n}\n\nexport const setStatusAC =(status:string)=>{\n    return {type:\"SET_STATUS\",status} as const\n}\n\nexport const getUserProfileThunk=(userId:string)=>(dispatch: Dispatch)=>{\n    usersAPI.getPrpfile(userId).then(response => {\n        dispatch(setUserProfileAC(response.data));\n    });\n}\n\nexport const getUsersSatatusThunk =(userId:string)=>(dispatch: Dispatch)=>{\n profileAPI.getStatus(userId).then(response =>{\n     dispatch(setStatusAC(response.data))\n })}\n\nexport const updateStatusThunk =(status:string)=>(dispatch: Dispatch)=>{\n    profileAPI.updateStatus(status).then(response=>{\n        if(response.data.resultCode === 0){\n            dispatch(setStatusAC(status))\n        }\n    })\n}\n\n","D:\\js\\React_Sotialna_Set\\src\\redux\\auth-reducer.tsx",["146"],"D:\\js\\React_Sotialna_Set\\src\\redux\\users-reducer.tsx",["147","148"],"import React from \"react\";\nimport {Dispatch} from \"redux\";\nimport {usersAPI} from \"../api/api\";\n\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UN_FOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_IS_PROGRESS = \"TOGGLE_IS_FOLLOWING_IS_PROGRESS\";\n\n\ntype followACType = ReturnType<typeof followAC>;\ntype unFollowACType = ReturnType<typeof unFollowAC>;\ntype setUsersACType = ReturnType<typeof setUsersAC>;\ntype setCurrentPageACType = ReturnType<typeof setCurrentPageAC>;\ntype setTotalUsersCountACType = ReturnType<typeof setTotalUsersCountAC>;\ntype toggleFetchingACType = ReturnType<typeof toggleFetchingAC>\ntype toggleIsFollowingIsProgressType = ReturnType<typeof toggleIsFollowingIsProgress>\n\n\ntype actionType =\n    followACType\n    | unFollowACType\n    | setUsersACType\n    | setCurrentPageACType\n    | setTotalUsersCountACType\n    | toggleFetchingACType\n    | toggleIsFollowingIsProgressType;\n\nexport type userType = {\n    name: string\n    id: string,\n    uniqueUrlName: string,\n    photos: {\n        \"small\": string,\n        \"large\": string\n    },\n    status: string,\n    followed: boolean\n}\n\n\nexport type InitialStateType = {\n    users: Array<userType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: string[]\n}\n\nexport type usersType = typeof initialState\n\nlet initialState: InitialStateType = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 3,\n    isFetching: false,\n    followingInProgress: []\n}\n\n\nexport const usersReducer = (state: InitialStateType = initialState, action: actionType): InitialStateType => {\n\n\n    switch (action.type) {\n        case FOLLOW: {\n\n            return {\n                ...state, users: state.users.map(m => {\n\n\n                    if (m.id === action.userId) {\n\n\n                        return {...m, followed: true}\n                    }\n                    return m\n                })\n            }\n        }\n        case UNFOLLOW: {\n\n            return {\n                ...state, users: state.users.map(m => {\n\n\n                    if (m.id === action.userId) {\n\n                        return {...m, followed: false}\n                    }\n                    return m\n                })\n            }\n        }\n        case SET_USERS: {\n\n\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n\n\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n\n\n            return {...state, totalUsersCount: action.totalCount}\n        }\n        case TOGGLE_IS_FETCHING: {\n\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_IS_PROGRESS: {\n\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport const followAC = (userId: string) => (\n    {type: FOLLOW, userId} as const\n)\n\nexport const unFollowAC = (userId: string) => (\n    {type: UNFOLLOW, userId} as const\n)\n\nexport const setUsersAC = (users: Array<userType>) => (\n    {type: SET_USERS, users} as const\n)\n\nexport const setCurrentPageAC = (currentPage: number) => (\n    {type: SET_CURRENT_PAGE, currentPage} as const\n)\n\nexport const setTotalUsersCountAC = (totalCount: number) => (\n    {type: SET_TOTAL_USERS_COUNT, totalCount} as const\n)\nexport const toggleFetchingAC = (isFetching: boolean) => (\n    {type: TOGGLE_IS_FETCHING, isFetching} as const\n)\nexport const toggleIsFollowingIsProgress = (isFetching: boolean, userId: string) => (\n    {type: TOGGLE_IS_FOLLOWING_IS_PROGRESS, isFetching, userId} as const\n)\n\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\n\n    return (dispatch: Dispatch) => {\n        dispatch(toggleFetchingAC(true));\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\n            dispatch(toggleFetchingAC(false))\n            dispatch(setUsersAC(data.items))\n            dispatch(setTotalUsersCountAC(data.totalCount))\n        });\n    }\n}\n\n\nexport const followThunkCreator = (userId: string) => {\ndebugger\n    return (dispatch: Dispatch) => {\n        dispatch(toggleIsFollowingIsProgress(true,userId))\n        usersAPI.follow(userId).then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(followAC(userId))\n            }\n            dispatch(toggleIsFollowingIsProgress(false, userId))\n    })\n}\n\n}\n\nexport const unFollowThunkCreator = (userId: string) => {\n\n    return (dispatch: Dispatch) => {\n        dispatch(toggleIsFollowingIsProgress(true, userId))\n        usersAPI.unFollow(userId).then(response => {\n            if (response.data.resultCode === 0) {\n               dispatch(unFollowAC(userId))\n            }\n            dispatch(toggleIsFollowingIsProgress(false, userId))\n    })\n}}","D:\\js\\React_Sotialna_Set\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Dialogs.tsx",["149","150","151","152","153","154","155"],"import React, {ChangeEvent} from \"react\";\nimport s from \"./Dialogs.module.css\"\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\nimport {ActionType, stateType} from \"../../redux/store\";\nimport {AppStateType, StoreType} from \"../../redux/redux-store\";\nimport {SuperMessageContainer} from \"./Message/MessageContainer\";\nimport {mapStateToPropsType} from \"./DialigsContainer\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport const Dialogs = (props: mapStateToPropsType) => {\n\n    //if (!props.isAuth) return <Redirect to={\"/login\"}/>;\n\n    return (\n        <div className={s.dialogs}>\n            <DialogItem state={props.state}/>\n            <SuperMessageContainer/>\n        </div>\n    )\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Users\\UsersContainer.tsx",["156","157","158"],"import React from \"react\";\nimport {connect, MapDispatchToProps} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {compose, Dispatch} from \"redux\";\nimport {\n    followAC,\n    followThunkCreator,\n    getUsersThunkCreator,\n    setCurrentPageAC, setTotalUsersCountAC,\n    setUsersAC, toggleFetchingAC,\n    toggleIsFollowingIsProgress,\n    unFollowAC,\n    unFollowThunkCreator,\n    userType\n} from \"../../redux/users-reducer\";\nimport {Users} from \"./Users\";\nimport axios from \"axios\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\nimport {usersAPI} from \"../../api/api\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\n\nexport type mapStateToPropsType = {\n    users: AppStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: string[]\n}\nexport type mapDispatchToPropsType = {\n    follow: (userId: string) => void\n    unFollow: (userId: string) => void\n    setUsers: (users: Array<userType>) => void\n    setCurrentPage: (currentPage: number) => void\n    setTotalUsersCount: (totalCount: number) => void\n    toggleIsFetching: (isFetching: boolean) => void\n    toggleIsFollowingProgress: (isFetching: boolean, userId: string) => void\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\n    followThunkCreator: (userId: string) => void\n    unFollowThunkCreator:(userId: string)=>void\n}\n\n\nexport type UsersPropsType = mapStateToPropsType & mapDispatchToPropsType\n\nexport class UsersAPIComponent extends React.Component<UsersPropsType> {\n\n\n    componentDidMount() {\n        // this.props.toggleIsFetching(true);\n        /*        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`,\n                    {\n                        withCredentials:true\n                    }).then(response => {\n                    this.props.toggleIsFetching(false)\n                    this.props.setUsers(response.data.items)\n                    this.props.setTotalUsersCount(response.data.totalCount)/// должно быть в onPageChanged\n                });\n            }*/\n\n        /* usersAPI.getUsers(this.props.currentPage,this.props.pageSize).then(data => {\n             this.props.toggleIsFetching(false)\n             this.props.setUsers(data.items)\n             this.props.setTotalUsersCount(data.totalCount)/// должно быть в onPageChanged\n         });*/\n\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\n\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        this.props.setCurrentPage(pageNumber)//не должно быть сдесь нужно рефакторить\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\n        /*this.props.setCurrentPage(pageNumber);\n        this.props.toggleIsFetching(true);\n\n            usersAPI.getUsers(pageNumber,this.props.pageSize).then(data => {\n            this.props.toggleIsFetching(false);\n            this.props.setUsers(data.items)\n            this.props.setTotalUsersCount(data.totalCount)\n        });*/\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users\n                totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                onPageChanged={this.onPageChanged}\n                users={this.props.users}\n                currentPage={this.props.currentPage}\n                unFollow={this.props.unFollow}\n                follow={this.props.follow}\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\n                followingInProgress={this.props.followingInProgress}\n                followThunkCreator={this.props.followThunkCreator}\n                unFollowThunkCreator={this.props.unFollowThunkCreator}\n\n            />;\n        </>\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        users: state,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n    return {\n        follow: (userId: string) => {\n            dispatch(followAC(userId))\n        },\n        unFollow: (userId: string) => {\n            dispatch(unFollowAC(userId))\n        },\n        setUsers: (users: Array<userType>) => {\n            dispatch(setUsersAC(users))\n        },\n        setCurrentPage: (currentPage: number) => {\n            dispatch(setCurrentPageAC(currentPage))\n        },\n        setTotalUsersCount: (totalCount: number) => {\n            dispatch(setTotalUsersCountAC(totalCount))\n        },\n        toggleIsFetching: (isFetching: boolean) => {\n            dispatch(toggleFetchingAC(isFetching))\n        },\n        toggleIsFollowingProgress: (isFetching: boolean, userId: string) => {\n            dispatch(toggleIsFollowingIsProgress(isFetching, userId))\n        },\n        getUsersThunkCreator: (currentPage: number, pageSize: number) => {\n            getUsersThunkCreator(currentPage, pageSize)(dispatch)\n        },\n        followThunkCreator: ( userId: string) => {\n            followThunkCreator(userId)(dispatch)\n        },\n        unFollowThunkCreator:(userId: string)=>{\n            unFollowThunkCreator(userId)(dispatch)\n        }\n\n    }\n}\n\n\n//export const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(withAuthRedirect(UsersAPIComponent))\nexport const UsersContainer = compose<React.ComponentType>( connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(UsersAPIComponent)","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileContainer.tsx",["159","160","161","162"],"D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\HederContainer.tsx",["163","164","165"],"D:\\js\\React_Sotialna_Set\\src\\components\\Users\\Users.tsx",["166","167","168"],"D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\Profile.tsx",["169","170","171","172","173"],"import React from \"react\";\nimport {MyPosts} from \"./MyPosts/MyPosts\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport s from \"./Profile.module.css\"\nimport {ActionType, stateType} from \"../../redux/store\";\nimport {AppStateType, StoreType} from \"../../redux/redux-store\";\nimport {SuperMyPostsContainer} from \"./MyPosts/MyPostsContainer\";\n\ntype profileType = {\n    profile: any\n    status:string\n    updateStatus:(status:string)=>void\n}\n\nexport const Profile: React.FC<profileType> = (props) => {\n\n    return (\n        <div className={s.content}>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <SuperMyPostsContainer/>\n            {/* <MyPostsContainer store={props.store}/>*/}\n        </div>)\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Heder\\Heder.tsx",["174","175"],"D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",["176"],"import React from \"react\";\nimport s from \"./../Dialogs.module.css\"\nimport {NavLink} from \"react-router-dom\";\nimport {stateType} from \"../../../redux/store\";\nimport {AppStateType} from \"../../../redux/redux-store\";\n\ntype dialogsItemType ={\n    state:AppStateType\n}\n\nexport const DialogItem: React.FC<dialogsItemType> = (props) => {\n\n    /*let dialogs = [\n        {id: \"1\", name: \"Dymych\"},\n        {id: \"2\", name: \"Andrey\"},\n        {id: \"3\", name: \"Sveta\"},\n        {id: \"4\", name: \"Sasha\"},\n        {id: \"5\", name: \"Viktor\"},\n        {id: \"6\", name: \"Valera\"},\n    ]*/\n    return (\n            <div className={s.dialogsItems}>\n                {props.state.dialogsState.dialogs.map(d => <div className={s.dialogs + ' ' + s.active}>\n                    <NavLink to={\"/dialogs/\" + d.id}>{d.name}</NavLink>\n                </div>)}\n                {/*    <DialogItem name={dialogs[0].name} id={dialogs[0].id} />\n                <DialogItem name={dialogs[1].name} id={dialogs[1].id} />\n                <DialogItem name={dialogs[2].name} id={dialogs[2].id} />\n                <DialogItem name={dialogs[3].name} id={dialogs[3].id} />\n                <DialogItem name={dialogs[4].name} id={dialogs[4].id} />\n                <DialogItem name={dialogs[5].name} id={dialogs[5].id} />*/}\n\n            </div>\n    )\n}\n\n","D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\MessageContainer.tsx",["177","178","179","180","181","182","183"],"import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\"\nimport {ChangeEvent} from \"react\";\nimport {ActionType, stateType} from \"../../../redux/store\";\nimport {sendMessageAC, updateNewMessageTextAC} from \"../../../redux/profile-reducer\";\nimport {AppStateType, StoreType} from \"../../../redux/redux-store\";\nimport {Message} from \"./Message\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\n\n\ntype messageContainerType = {\n    store: StoreType\n}\n\n/*export  const MessageContainer: React.FC<messageContainerType> = (props) => {\n\n    /!*let messages = [\n        {id: \"1\", message: \"Hi\"},\n        {id: \"2\", message: \"How is you it?\"},\n        {id: \"3\", message: \"Yo\"},\n        {id: \"4\", message: \"ccccc\"},\n        {id: \"5\", message: \"tttttt\"},\n        {id: \"6\", message: \"yyyyyyy\"},\n    ]*!/\n    let newMessageBody = props.store.getState().dialogsState.newMessageBody;\n\n    let onNewMessageChange = (body: string) => {\n        props.store.dispatch(updateNewMessageTextAC(body))\n    }\n\n    let onSendMessageClick = () => {\n        props.store.dispatch(sendMessageAC())\n    }\n    return (\n        <Message state={props.store.getState()}  onNewMessageChange={onNewMessageChange}\n                 onSendMessageClick={onSendMessageClick}/>\n    )\n}*/\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        state: state\n    }\n}\n\n\nlet mapDispatchToProps = (dispatch:Dispatch) => {\n    return {\n        onNewMessageChange:(body:string)=>{\n            dispatch(updateNewMessageTextAC(body))\n        },\n        onSendMessageClick:(newMessage:string)=>{\n            dispatch(sendMessageAC(newMessage))\n        }\n    }\n}\n\nexport const SuperMessageContainer = connect(mapStateToProps, mapDispatchToProps)(Message);","D:\\js\\React_Sotialna_Set\\src\\components\\common\\Preloader\\Preloader.tsx",["184"],"import React from \"react\";\n\n\nexport let Preloader = () => {\n    return <div>\n        <img src={\"https://i.gifer.com/g0R5.gif\"}/>\n    </div>\n}","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["185","186","187","188","189","190","191","192","193","194"],"import React, {RefObject} from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport {Post} from \"./Post/Post\";\nimport {addPostAC, updateNewPostTextAC} from \"../../../redux/dialogs-reducer\";\nimport {ActionType, stateType} from \"../../../redux/store\";\nimport {AppStateType, StoreType} from \"../../../redux/redux-store\";\n\nimport {connect} from \"react-redux\";\nimport {Message} from \"../../Dialogs/Message/Message\";\nimport {Dispatch} from \"redux\";\nimport {sendMessageAC, updateNewMessageTextAC} from \"../../../redux/profile-reducer\";\nimport {MyPosts} from \"./MyPosts\";\n\n\n\ntype MyPostsContainerType = {\n    store:StoreType\n}\n\n/*export const MyPostsContainer: React.FC<MyPostsContainerType> = (props) => {\n\n    /!*let postData = [\n        {id: \"1\", message: \"Hi, how are you?\", likesCount: 12},\n        {id: \"2\", message: \"It's my first post\", likesCount: 5},\n        {id: \"3\", message: \"aaaaaaaaaaaaaaa\", likesCount: 5},\n\n    ]\n\n*!/\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\n\n    let onAddPost = () => {\n        // props.addPost()\n        props.store.dispatch(addPostAC())\n\n    }\n    let onPostChange = (text:string) => {\n        //let text = newPostElement.current? newPostElement.current.value: \"\"\n        props.store.dispatch(updateNewPostTextAC(text))\n        /!*props.dispatch({type: \"UPDATE-NEW-POST-TEX\", newText: newPostElement.current? newPostElement.current.value: \"\"})*!/\n        /!*if (newPostElement.current) {\n            props.updateNewPostText(newPostElement.current.value)\n        }*!/\n    }\n\n    return (<MyPosts updateNewPostText={onPostChange} addPost ={onAddPost} posts={props.store.getState()}/> )\n}*/\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        posts: state\n    }\n}\n\n\nlet mapDispatchToProps = (dispatch:Dispatch) => {\n    return {\n        updateNewPostText:(text:string)=>{\n            dispatch(updateNewPostTextAC(text))\n        },\n        addPost:(newTextPost:string)=>{\n            dispatch(addPostAC(newTextPost))\n        }\n    }\n}\n\nexport const SuperMyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["195"],"D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\Message\\Message.tsx",["196","197","198","199","200","201"],"D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["202","203","204","205","206","207"],"D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["208"],"import React from \"react\";\nimport s from \"./Post.module.css\";\n\ntype PostType = {\n    message: string,\n    likeCount: number\n}\n\nexport const Post: React.FC<PostType> = (props) => {\n    return (\n        <div className={s.item}>\n            <img src=\"https://i.imgur.com/gqJvKwW.png\"/>\n            {props.message}\n            <div>\n                <span>like</span>{props.likeCount}\n            </div>\n        </div>\n    )\n}","D:\\js\\React_Sotialna_Set\\src\\api\\api.ts",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Login\\Login.tsx",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Dialogs\\DialigsContainer.tsx",["209"],"import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dialogs} from \"./Dialogs\";\r\n\r\n\r\nexport type mapStateToPropsType = {\r\n    state:AppStateType\r\n    //isAuth:boolean\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType):mapStateToPropsType=> {\r\n    return {\r\n        state: state,\r\n       // isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n//export const DialigsContainer = connect(mapStateToProps)(Dialogs);\r\n//export const DialigsContainer = connect(mapStateToProps)(withAuthRedirect(Dialogs));\r\nexport const DialigsContainer = compose<React.ComponentType>(connect(mapStateToProps),withAuthRedirect)(Dialogs);","D:\\js\\React_Sotialna_Set\\src\\hoc\\withAuthRedirect.tsx",[],"D:\\js\\React_Sotialna_Set\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],"D:\\js\\React_Sotialna_Set\\src\\utils\\validators\\validators.ts",["210"],"D:\\js\\React_Sotialna_Set\\src\\components\\common\\Preloader\\FormsControls\\FormsControls.tsx",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":3,"column":9,"nodeType":"217","messageId":"218","endLine":3,"endColumn":15},{"ruleId":"215","severity":1,"message":"219","line":6,"column":9,"nodeType":"217","messageId":"218","endLine":6,"endColumn":16},{"ruleId":"215","severity":1,"message":"220","line":7,"column":9,"nodeType":"217","messageId":"218","endLine":7,"endColumn":16},{"ruleId":"215","severity":1,"message":"221","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":13},{"ruleId":"215","severity":1,"message":"222","line":2,"column":21,"nodeType":"217","messageId":"218","endLine":2,"endColumn":30},{"ruleId":"215","severity":1,"message":"223","line":3,"column":9,"nodeType":"217","messageId":"218","endLine":3,"endColumn":21},{"ruleId":"215","severity":1,"message":"221","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":13},{"ruleId":"215","severity":1,"message":"222","line":4,"column":21,"nodeType":"217","messageId":"218","endLine":4,"endColumn":30},{"ruleId":"215","severity":1,"message":"221","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":13},{"ruleId":"215","severity":1,"message":"221","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":125,"column":65,"nodeType":"226","messageId":"227","endLine":125,"endColumn":67},{"ruleId":"215","severity":1,"message":"228","line":1,"column":16,"nodeType":"217","messageId":"218","endLine":1,"endColumn":27},{"ruleId":"215","severity":1,"message":"229","line":4,"column":9,"nodeType":"217","messageId":"218","endLine":4,"endColumn":16},{"ruleId":"215","severity":1,"message":"230","line":5,"column":9,"nodeType":"217","messageId":"218","endLine":5,"endColumn":19},{"ruleId":"215","severity":1,"message":"222","line":5,"column":21,"nodeType":"217","messageId":"218","endLine":5,"endColumn":30},{"ruleId":"215","severity":1,"message":"223","line":6,"column":9,"nodeType":"217","messageId":"218","endLine":6,"endColumn":21},{"ruleId":"215","severity":1,"message":"231","line":6,"column":23,"nodeType":"217","messageId":"218","endLine":6,"endColumn":32},{"ruleId":"215","severity":1,"message":"232","line":9,"column":9,"nodeType":"217","messageId":"218","endLine":9,"endColumn":17},{"ruleId":"215","severity":1,"message":"233","line":2,"column":18,"nodeType":"217","messageId":"218","endLine":2,"endColumn":36},{"ruleId":"215","severity":1,"message":"234","line":17,"column":8,"nodeType":"217","messageId":"218","endLine":17,"endColumn":13},{"ruleId":"215","severity":1,"message":"235","line":19,"column":9,"nodeType":"217","messageId":"218","endLine":19,"endColumn":17},{"ruleId":"215","severity":1,"message":"234","line":4,"column":8,"nodeType":"217","messageId":"218","endLine":4,"endColumn":13},{"ruleId":"215","severity":1,"message":"236","line":9,"column":5,"nodeType":"217","messageId":"218","endLine":9,"endColumn":21},{"ruleId":"215","severity":1,"message":"232","line":14,"column":9,"nodeType":"217","messageId":"218","endLine":14,"endColumn":17},{"ruleId":"215","severity":1,"message":"235","line":15,"column":9,"nodeType":"217","messageId":"218","endLine":15,"endColumn":17},{"ruleId":"215","severity":1,"message":"234","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":13},{"ruleId":"215","severity":1,"message":"237","line":5,"column":17,"nodeType":"217","messageId":"218","endLine":5,"endColumn":28},{"ruleId":"215","severity":1,"message":"238","line":7,"column":10,"nodeType":"217","messageId":"218","endLine":7,"endColumn":17},{"ruleId":"215","severity":1,"message":"234","line":5,"column":8,"nodeType":"217","messageId":"218","endLine":5,"endColumn":13},{"ruleId":"215","severity":1,"message":"235","line":6,"column":9,"nodeType":"217","messageId":"218","endLine":6,"endColumn":17},{"ruleId":"239","severity":1,"message":"240","line":40,"column":25,"nodeType":"241","endLine":42,"endColumn":55},{"ruleId":"215","severity":1,"message":"242","line":2,"column":9,"nodeType":"217","messageId":"218","endLine":2,"endColumn":16},{"ruleId":"215","severity":1,"message":"230","line":5,"column":9,"nodeType":"217","messageId":"218","endLine":5,"endColumn":19},{"ruleId":"215","severity":1,"message":"222","line":5,"column":21,"nodeType":"217","messageId":"218","endLine":5,"endColumn":30},{"ruleId":"215","severity":1,"message":"223","line":6,"column":9,"nodeType":"217","messageId":"218","endLine":6,"endColumn":21},{"ruleId":"215","severity":1,"message":"231","line":6,"column":23,"nodeType":"217","messageId":"218","endLine":6,"endColumn":32},{"ruleId":"215","severity":1,"message":"243","line":1,"column":16,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":12,"column":13,"nodeType":"241","endLine":12,"endColumn":105},{"ruleId":"215","severity":1,"message":"222","line":4,"column":9,"nodeType":"217","messageId":"218","endLine":4,"endColumn":18},{"ruleId":"215","severity":1,"message":"221","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":13},{"ruleId":"215","severity":1,"message":"244","line":2,"column":9,"nodeType":"217","messageId":"218","endLine":2,"endColumn":16},{"ruleId":"215","severity":1,"message":"245","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":9},{"ruleId":"215","severity":1,"message":"228","line":4,"column":9,"nodeType":"217","messageId":"218","endLine":4,"endColumn":20},{"ruleId":"215","severity":1,"message":"230","line":5,"column":9,"nodeType":"217","messageId":"218","endLine":5,"endColumn":19},{"ruleId":"215","severity":1,"message":"222","line":5,"column":21,"nodeType":"217","messageId":"218","endLine":5,"endColumn":30},{"ruleId":"215","severity":1,"message":"246","line":13,"column":6,"nodeType":"217","messageId":"218","endLine":13,"endColumn":26},{"ruleId":"239","severity":1,"message":"240","line":6,"column":9,"nodeType":"241","endLine":6,"endColumn":52},{"ruleId":"215","severity":1,"message":"221","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":13},{"ruleId":"215","severity":1,"message":"247","line":1,"column":16,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"245","line":2,"column":8,"nodeType":"217","messageId":"218","endLine":2,"endColumn":9},{"ruleId":"215","severity":1,"message":"248","line":3,"column":9,"nodeType":"217","messageId":"218","endLine":3,"endColumn":13},{"ruleId":"215","severity":1,"message":"230","line":5,"column":9,"nodeType":"217","messageId":"218","endLine":5,"endColumn":19},{"ruleId":"215","severity":1,"message":"222","line":5,"column":21,"nodeType":"217","messageId":"218","endLine":5,"endColumn":30},{"ruleId":"215","severity":1,"message":"229","line":9,"column":9,"nodeType":"217","messageId":"218","endLine":9,"endColumn":16},{"ruleId":"215","severity":1,"message":"249","line":11,"column":9,"nodeType":"217","messageId":"218","endLine":11,"endColumn":22},{"ruleId":"215","severity":1,"message":"250","line":11,"column":24,"nodeType":"217","messageId":"218","endLine":11,"endColumn":46},{"ruleId":"215","severity":1,"message":"251","line":16,"column":6,"nodeType":"217","messageId":"218","endLine":16,"endColumn":26},{"ruleId":"239","severity":1,"message":"240","line":23,"column":13,"nodeType":"241","endLine":23,"endColumn":39},{"ruleId":"215","severity":1,"message":"244","line":2,"column":9,"nodeType":"217","messageId":"218","endLine":2,"endColumn":16},{"ruleId":"215","severity":1,"message":"230","line":5,"column":9,"nodeType":"217","messageId":"218","endLine":5,"endColumn":19},{"ruleId":"215","severity":1,"message":"222","line":5,"column":21,"nodeType":"217","messageId":"218","endLine":5,"endColumn":30},{"ruleId":"215","severity":1,"message":"249","line":6,"column":9,"nodeType":"217","messageId":"218","endLine":6,"endColumn":22},{"ruleId":"215","severity":1,"message":"250","line":6,"column":24,"nodeType":"217","messageId":"218","endLine":6,"endColumn":46},{"ruleId":"215","severity":1,"message":"252","line":28,"column":9,"nodeType":"217","messageId":"218","endLine":28,"endColumn":27},{"ruleId":"215","severity":1,"message":"247","line":1,"column":16,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"253","line":4,"column":9,"nodeType":"217","messageId":"218","endLine":4,"endColumn":18},{"ruleId":"215","severity":1,"message":"254","line":4,"column":20,"nodeType":"217","messageId":"218","endLine":4,"endColumn":39},{"ruleId":"215","severity":1,"message":"230","line":5,"column":9,"nodeType":"217","messageId":"218","endLine":5,"endColumn":19},{"ruleId":"215","severity":1,"message":"222","line":5,"column":21,"nodeType":"217","messageId":"218","endLine":5,"endColumn":30},{"ruleId":"215","severity":1,"message":"255","line":43,"column":9,"nodeType":"217","messageId":"218","endLine":43,"endColumn":21},{"ruleId":"239","severity":1,"message":"240","line":12,"column":13,"nodeType":"241","endLine":12,"endColumn":57},{"ruleId":"215","severity":1,"message":"256","line":3,"column":18,"nodeType":"217","messageId":"218","endLine":3,"endColumn":26},{"ruleId":"215","severity":1,"message":"221","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":13},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'Dialogs' is defined but never used.","'React' is defined but never used.","'stateType' is defined but never used.","'AppStateType' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'ChangeEvent' is defined but never used.","'Message' is defined but never used.","'ActionType' is defined but never used.","'StoreType' is defined but never used.","'Redirect' is defined but never used.","'MapDispatchToProps' is defined but never used.","'axios' is defined but never used.","'usersAPI' is defined but never used.","'setUserProfileAC' is defined but never used.","'setUserDate' is defined but never used.","'authAPI' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MyPosts' is defined but never used.","'ReactNode' is defined but never used.","'NavLink' is defined but never used.","'s' is defined but never used.","'messageContainerType' is defined but never used.","'RefObject' is defined but never used.","'Post' is defined but never used.","'sendMessageAC' is defined but never used.","'updateNewMessageTextAC' is defined but never used.","'MyPostsContainerType' is defined but never used.","'onNewMessageChange' is assigned a value but never used.","'addPostAC' is defined but never used.","'updateNewPostTextAC' is defined but never used.","'onPostChange' is assigned a value but never used.","'Dispatch' is defined but never used.","no-global-assign","no-unsafe-negation"]