{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\React_Sotialna_Set\\\\src\\\\components\\\\Dialogs\\\\Message\\\\MessageContainer.tsx\";\nimport React from \"react\";\nimport { sendMessageAC, updateNewMessageTextAC } from \"../../../redux/profile-reducer\";\nimport { Message } from \"./Message\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MessageContainer = props => {\n  /*let messages = [\n      {id: \"1\", message: \"Hi\"},\n      {id: \"2\", message: \"How is you it?\"},\n      {id: \"3\", message: \"Yo\"},\n      {id: \"4\", message: \"ccccc\"},\n      {id: \"5\", message: \"tttttt\"},\n      {id: \"6\", message: \"yyyyyyy\"},\n  ]*/\n  let newMessageBody = props.store.getState().dialogsState.newMessageBody;\n\n  let onNewMessageChange = body => {\n    props.store.dispatch(updateNewMessageTextAC(body));\n  };\n\n  let onSendMessageClick = () => {\n    props.store.dispatch(sendMessageAC());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Message, {\n    state: props.store.getState(),\n    onNewMessageChange: onNewMessageChange,\n    onSendMessageClick: onSendMessageClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_c = MessageContainer;\n\nlet mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    onNewMessageChange: body => {\n      dispatch(updateNewMessageTextAC(body));\n    },\n    onSendMessageClick: () => {\n      dispatch(sendMessageAC());\n    }\n  };\n};\n\nexport const SuperMessageContainer = connect(mapStateToProps, mapDispatchToProps)(Message);\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageContainer\");","map":{"version":3,"sources":["D:/js/React_Sotialna_Set/src/components/Dialogs/Message/MessageContainer.tsx"],"names":["React","sendMessageAC","updateNewMessageTextAC","Message","connect","MessageContainer","props","newMessageBody","store","getState","dialogsState","onNewMessageChange","body","dispatch","onSendMessageClick","mapStateToProps","state","mapDispatchToProps","SuperMessageContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAKA,SAAQC,aAAR,EAAuBC,sBAAvB,QAAoD,gCAApD;AAEA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAQA,OAAQ,MAAMC,gBAAgD,GAAIC,KAAD,IAAW;AAExE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI,MAAIC,cAAc,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,YAAvB,CAAoCH,cAAzD;;AAEA,MAAII,kBAAkB,GAAIC,IAAD,IAAkB;AACvCN,IAAAA,KAAK,CAACE,KAAN,CAAYK,QAAZ,CAAqBX,sBAAsB,CAACU,IAAD,CAA3C;AACH,GAFD;;AAIA,MAAIE,kBAAkB,GAAG,MAAM;AAC3BR,IAAAA,KAAK,CAACE,KAAN,CAAYK,QAAZ,CAAqBZ,aAAa,EAAlC;AACH,GAFD;;AAGA,sBACI,QAAC,OAAD;AAAS,IAAA,KAAK,EAAEK,KAAK,CAACE,KAAN,CAAYC,QAAZ,EAAhB;AAAyC,IAAA,kBAAkB,EAAEE,kBAA7D;AACS,IAAA,kBAAkB,EAAEG;AAD7B;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,CAvBO;KAAMT,gB;;AAyBd,IAAIU,eAAe,GAAIC,KAAD,IAAyB;AAC3C,SAAO;AACHA,IAAAA,KAAK,EAAEA;AADJ,GAAP;AAGH,CAJD;;AAOA,IAAIC,kBAAkB,GAAIJ,QAAD,IAAuB;AAC5C,SAAO;AACHF,IAAAA,kBAAkB,EAAEC,IAAD,IAAe;AAC9BC,MAAAA,QAAQ,CAACX,sBAAsB,CAACU,IAAD,CAAvB,CAAR;AACH,KAHE;AAIHE,IAAAA,kBAAkB,EAAC,MAAI;AACnBD,MAAAA,QAAQ,CAACZ,aAAa,EAAd,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,OAAO,MAAMiB,qBAAqB,GAAGd,OAAO,CAACW,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,OAA7C,CAA9B","sourcesContent":["import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\"\nimport {ChangeEvent} from \"react\";\nimport {ActionType, stateType} from \"../../../redux/store\";\nimport {sendMessageAC, updateNewMessageTextAC} from \"../../../redux/profile-reducer\";\nimport {AppStateType, StoreType} from \"../../../redux/redux-store\";\nimport {Message} from \"./Message\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\n\n\ntype messageContainerType = {\n    store: StoreType\n}\n\nexport  const MessageContainer: React.FC<messageContainerType> = (props) => {\n\n    /*let messages = [\n        {id: \"1\", message: \"Hi\"},\n        {id: \"2\", message: \"How is you it?\"},\n        {id: \"3\", message: \"Yo\"},\n        {id: \"4\", message: \"ccccc\"},\n        {id: \"5\", message: \"tttttt\"},\n        {id: \"6\", message: \"yyyyyyy\"},\n    ]*/\n    let newMessageBody = props.store.getState().dialogsState.newMessageBody;\n\n    let onNewMessageChange = (body: string) => {\n        props.store.dispatch(updateNewMessageTextAC(body))\n    }\n\n    let onSendMessageClick = () => {\n        props.store.dispatch(sendMessageAC())\n    }\n    return (\n        <Message state={props.store.getState()}  onNewMessageChange={onNewMessageChange}\n                 onSendMessageClick={onSendMessageClick}/>\n    )\n}\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        state: state\n    }\n}\n\n\nlet mapDispatchToProps = (dispatch:Dispatch) => {\n    return {\n        onNewMessageChange:(body:string)=>{\n            dispatch(updateNewMessageTextAC(body))\n        },\n        onSendMessageClick:()=>{\n            dispatch(sendMessageAC())\n        }\n    }\n}\n\nexport const SuperMessageContainer = connect(mapStateToProps, mapDispatchToProps)(Message);"]},"metadata":{},"sourceType":"module"}