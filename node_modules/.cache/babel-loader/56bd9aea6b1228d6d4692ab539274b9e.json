{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\React_Sotialna_Set\\\\src\\\\components\\\\Profile\\\\ProfileContainer.tsx\";\nimport React from \"react\";\nimport { Profile } from \"./Profile\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { setUserProfileAC } from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProfileContainer extends React.Component {\n  componentDidMount() {\n    debugger;\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = \"2\";\n    }\n\n    axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId).then(response => {\n      this.props.setUserProfile(response.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profileState.profile\n});\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    setUserProfile: profile => {\n      dispatch(setUserProfileAC(profile));\n    }\n  };\n};\n\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer);\n_c = WithUrlDataContainerComponent;\nexport const ProfileConnect = connect(mapStateToProps, mapDispatchToProps)(WithUrlDataContainerComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"WithUrlDataContainerComponent\");","map":{"version":3,"sources":["D:/js/React_Sotialna_Set/src/components/Profile/ProfileContainer.tsx"],"names":["React","Profile","axios","connect","setUserProfileAC","withRouter","ProfileContainer","Component","componentDidMount","userId","props","match","params","get","then","response","setUserProfile","data","render","profile","mapStateToProps","state","profileState","mapDispatchToProps","dispatch","WithUrlDataContainerComponent","ProfileConnect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,OAAR,QAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,6BAA/B;AAGA,SAA6BC,UAA7B,QAA8C,kBAA9C;;AAoBA,OAAO,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA0D;AAC7DC,EAAAA,iBAAiB,GAAG;AAChB;AACA,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,GAAT;AACH;;AACDP,IAAAA,KAAK,CAACW,GAAN,CAAW,uDAAD,GAA0DJ,MAApE,EAA4EK,IAA5E,CAAiFC,QAAQ,IAAI;AACzF,WAAKL,KAAL,CAAWM,cAAX,CAA0BD,QAAQ,CAACE,IAAnC;AACH,KAFD;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBAEI,QAAC,OAAD,OAAa,KAAKR,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWS;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAIH;;AAlB4D;;AAqBjE,IAAIC,eAAe,GAAIC,KAAD,KAClB;AACIF,EAAAA,OAAO,EAAEE,KAAK,CAACC,YAAN,CAAmBH;AADhC,CADkB,CAAtB;;AAMA,IAAII,kBAAkB,GAAIC,QAAD,IAAgD;AACrE,SAAO;AACHR,IAAAA,cAAc,EAAGG,OAAD,IAAkB;AAC9BK,MAAAA,QAAQ,CAACpB,gBAAgB,CAACe,OAAD,CAAjB,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,IAAIM,6BAA6B,GAAGpB,UAAU,CAACC,gBAAD,CAA9C;KAAImB,6B;AAEJ,OAAO,MAAMC,cAAc,GAAGvB,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CE,6BAA7C,CAAvB","sourcesContent":["import React from \"react\";\n\nimport {Profile} from \"./Profile\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {setUserProfileAC} from \"../../redux/profile-reducer\";\nimport {Dispatch} from \"redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\ntype mapStateToPropsType = {\n    profile: any\n}\n\ntype mapDispatchToPropsType = {\n    setUserProfile: (profile: any) => void\n}\n\ntype PathParamsType = {\n    userId: string\n}\n\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerType\n\n\ntype ProfileContainerType = mapStateToPropsType & mapDispatchToPropsType\n\n\nexport class ProfileContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        debugger\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = \"2\";\n        }\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId).then(response => {\n            this.props.setUserProfile(response.data);\n        });\n\n    }\n\n    render() {\n        return (\n\n            <Profile {...this.props} profile={this.props.profile}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state: AppStateType) => (\n    {\n        profile: state.profileState.profile\n    }\n);\n\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n    return {\n        setUserProfile: (profile: any) => {\n            dispatch(setUserProfileAC(profile))\n        }\n    }\n}\n\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\n\nexport const ProfileConnect = connect(mapStateToProps, mapDispatchToProps)(WithUrlDataContainerComponent);\n\n\n"]},"metadata":{},"sourceType":"module"}