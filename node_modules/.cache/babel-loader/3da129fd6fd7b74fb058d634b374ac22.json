{"ast":null,"code":"const FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UN_FOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 3,\n  isFetching: false\n};\nexport const usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      {\n        return { ...state,\n          users: state.users.map(m => {\n            if (m.id === action.userId) {\n              return { ...m,\n                followed: true\n              };\n            }\n\n            return m;\n          })\n        };\n      }\n\n    case UNFOLLOW:\n      {\n        return { ...state,\n          users: state.users.map(m => {\n            if (m.id === action.userId) {\n              return { ...m,\n                followed: false\n              };\n            }\n\n            return m;\n          })\n        };\n      }\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalCount\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unFollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPageAC = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCountAC = totalCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalCount\n});\nexport const toggleFetchingAC = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});","map":{"version":3,"sources":["D:/js/React_Sotialna_Set/src/redux/users-reducer.tsx"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","state","action","type","map","m","id","userId","followed","totalCount","followAC","unFollowAC","setUsersAC","setCurrentPageAC","setTotalUsersCountAC","toggleFetchingAC"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UN_FOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT =\"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING =\"TOGGLE_IS_FETCHING\";\n\ntype followACType = ReturnType<typeof followAC>;\ntype unFollowACType = ReturnType<typeof unFollowAC>;\ntype setUsersACType = ReturnType<typeof setUsersAC>;\ntype setCurrentPageACType = ReturnType<typeof setCurrentPageAC>;\ntype setTotalUsersCountACType = ReturnType<typeof setTotalUsersCountAC>;\ntype toggleFetchingACType = ReturnType<typeof toggleFetchingAC>\n\n\ntype actionType = followACType | unFollowACType | setUsersACType | setCurrentPageACType | setTotalUsersCountACType | toggleFetchingACType;\n\nexport type userType = {\n    name: string\n    id: string,\n    uniqueUrlName: string,\n    photos: {\n        \"small\": string,\n        \"large\": string\n    },\n    status: string,\n    followed: boolean\n}\n\n\nexport type InitialStateType = {\n    users: Array<userType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n}\n\nexport type usersType = typeof initialState\n\nlet initialState: InitialStateType = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 3,\n    isFetching: false\n}\n\n\nexport const usersReducer = (state: InitialStateType = initialState, action: actionType): InitialStateType => {\n\n\n    switch (action.type) {\n        case FOLLOW: {\n\n            return {\n                ...state, users: state.users.map(m => {\n\n\n                    if (m.id === action.userId) {\n\n\n                        return {...m, followed: true}\n                    }\n                    return m\n                })\n            }\n        }\n        case UNFOLLOW: {\n\n            return {\n                ...state, users: state.users.map(m => {\n\n\n\n                    if (m.id === action.userId) {\n\n                        return {...m, followed: false}\n                    }\n                    return m\n                })\n            }\n        }\n        case SET_USERS: {\n\n\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n\n\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n\n\n            return {...state, totalUsersCount: action.totalCount}\n        }\n        case TOGGLE_IS_FETCHING:{\n\n            return {...state,isFetching:action.isFetching}\n        }\n        default:\n            return state\n    }\n}\n\nexport const followAC = (userId: string) => (\n    {type: FOLLOW, userId} as const\n)\n\nexport const unFollowAC = (userId: string) => (\n    {type: UNFOLLOW, userId} as const\n)\n\nexport const setUsersAC = (users: Array<userType>) => (\n    {type: SET_USERS, users} as const\n)\n\nexport const setCurrentPageAC = (currentPage: number) => (\n    {type: SET_CURRENT_PAGE, currentPage} as const\n)\n\nexport const setTotalUsersCountAC = (totalCount: number) => (\n    {type: SET_TOTAL_USERS_COUNT, totalCount} as const\n    )\nexport const toggleFetchingAC = (isFetching: boolean) => (\n    {type: TOGGLE_IS_FETCHING, isFetching} as const\n)"]},"metadata":{},"sourceType":"module"}