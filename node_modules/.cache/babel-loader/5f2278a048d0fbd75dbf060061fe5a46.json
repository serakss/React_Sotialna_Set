{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\React_Sotialna_Set\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.tsx\";\nimport React from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport { Post } from \"./Post/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyPosts = props => {\n  /*let postData = [\n      {id: \"1\", message: \"Hi, how are you?\", likesCount: 12},\n      {id: \"2\", message: \"It's my first post\", likesCount: 5},\n      {id: \"3\", message: \"aaaaaaaaaaaaaaa\", likesCount: 5},\n   ]\n  */\n  let newPostElement = /*#__PURE__*/React.createRef();\n\n  let addPost = () => {\n    props.addPost(); //props.dispatch(addPostAC())\n  };\n\n  let onPostChange = () => {\n    // let text = newPostElement.current? newPostElement.current.value: \"\"\n    // props.dispatch(updateNewPostTextAC(text))\n\n    /*props.dispatch({type: \"UPDATE-NEW-POST-TEX\", newText: newPostElement.current? newPostElement.current.value: \"\"})*/\n    if (newPostElement.current) {\n      props.updateNewPostText(newPostElement.current.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.postsBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: newPostElement,\n          value: props.posts.profileState.newPostText,\n          onChange: onPostChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPost,\n          children: \"Add post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.posts,\n        children: props.posts.profileState.postData.map(p => /*#__PURE__*/_jsxDEV(Post, {\n          message: p.message,\n          likeCount: p.likesCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 65\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_c = MyPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"sources":["D:/js/React_Sotialna_Set/src/components/Profile/MyPosts/MyPosts.tsx"],"names":["React","s","Post","MyPosts","props","newPostElement","createRef","addPost","onPostChange","current","updateNewPostText","value","postsBlock","posts","profileState","newPostText","postData","map","p","message","likesCount"],"mappings":";AAAA,OAAOA,KAAP,MAA+B,OAA/B;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,IAAR,QAAmB,aAAnB;;AAaA,OAAO,MAAMC,OAA8B,GAAIC,KAAD,IAAW;AAErD;AACJ;AACA;AACA;AACA;AACA;AAGI,MAAIC,cAAc,gBAAGL,KAAK,CAACM,SAAN,EAArB;;AAEA,MAAIC,OAAO,GAAG,MAAM;AACfH,IAAAA,KAAK,CAACG,OAAN,GADe,CAEhB;AAEH,GAJD;;AAKA,MAAIC,YAAY,GAAG,MAAM;AACvB;AACC;;AACC;AACA,QAAIH,cAAc,CAACI,OAAnB,EAA4B;AACxBL,MAAAA,KAAK,CAACM,iBAAN,CAAwBL,cAAc,CAACI,OAAf,CAAuBE,KAA/C;AACH;AAEJ,GARD;;AAWA,sBAEI;AAAK,IAAA,SAAS,EAAEV,CAAC,CAACW,UAAlB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAA,+BACI;AAAU,UAAA,GAAG,EAAEP,cAAf;AAA+B,UAAA,KAAK,EAAED,KAAK,CAACS,KAAN,CAAYC,YAAZ,CAAyBC,WAA/D;AAA4E,UAAA,QAAQ,EAAEP;AAAtF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAK,QAAA,SAAS,EAAEN,CAAC,CAACY,KAAlB;AAAA,kBAEKT,KAAK,CAACS,KAAN,CAAYC,YAAZ,CAAyBE,QAAzB,CAAkCC,GAAlC,CAAsCC,CAAC,iBAAI,QAAC,IAAD;AAAM,UAAA,OAAO,EAAEA,CAAC,CAACC,OAAjB;AAA0B,UAAA,SAAS,EAAED,CAAC,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAA3C;AAFL;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAqBH,CAjDM;KAAMjB,O","sourcesContent":["import React, {RefObject} from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport {Post} from \"./Post/Post\";\nimport {addPostAC, updateNewPostTextAC} from \"../../../redux/dialogs-reducer\";\nimport {ActionType, stateType} from \"../../../redux/store\";\nimport {AppStateType} from \"../../../redux/redux-store\";\n\n\n\ntype myPostsType = {\n    updateNewPostText:(text:string)=>void\n    addPost:()=>void\n    posts:AppStateType\n}\n\nexport const MyPosts: React.FC<myPostsType> = (props) => {\n\n    /*let postData = [\n        {id: \"1\", message: \"Hi, how are you?\", likesCount: 12},\n        {id: \"2\", message: \"It's my first post\", likesCount: 5},\n        {id: \"3\", message: \"aaaaaaaaaaaaaaa\", likesCount: 5},\n\n    ]\n\n*/\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\n\n    let addPost = () => {\n         props.addPost()\n        //props.dispatch(addPostAC())\n\n    }\n    let onPostChange = () => {\n      // let text = newPostElement.current? newPostElement.current.value: \"\"\n       // props.dispatch(updateNewPostTextAC(text))\n        /*props.dispatch({type: \"UPDATE-NEW-POST-TEX\", newText: newPostElement.current? newPostElement.current.value: \"\"})*/\n        if (newPostElement.current) {\n            props.updateNewPostText(newPostElement.current.value)\n        }\n\n    }\n\n\n    return (\n\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <div>\n                    <textarea ref={newPostElement} value={props.posts.profileState.newPostText} onChange={onPostChange}/>\n                </div>\n                <div>\n                    <button onClick={addPost}>Add post</button>\n                </div>\n                <div className={s.posts}>\n\n                    {props.posts.profileState.postData.map(p => <Post message={p.message} likeCount={p.likesCount}/>)}\n\n                    {/* <Post message={postData[0].message} likeCount={postData[0].likesCount}/>\n                    <Post message={postData[1].message} likeCount={postData[1].likesCount}/>*/}\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}